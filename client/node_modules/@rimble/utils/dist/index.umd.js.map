{"version":3,"file":"index.umd.js","sources":["../src/index.js"],"sourcesContent":["import Bowser from 'bowser';\n\n// Validates user's browser is web3 capable\nconst funcs = {\n  browserIsWeb3Capable: () => {\n    // User Agent\n    const browser = Bowser.getParser(window.navigator.userAgent);\n    const userAgent = browser.parse().parsedResult;\n\n    const validBrowser = browser.satisfies({\n      desktop: {\n        chrome: '>49',\n        firefox: '>52',\n        opera: '>36',\n      },\n    })\n      ? true\n      : false;\n\n    const web3Capable = validBrowser || funcs.hasWeb3Available();\n\n    return web3Capable;\n  },\n\n  // Returns a network name based on a network ID\n  getEthNetworkNameById: networkId => {\n    let networkName = '';\n\n    if (typeof networkId === 'undefined') {\n      networkId = '';\n    }\n\n    switch (networkId) {\n      case 1:\n        networkName = 'Main';\n        break;\n      case 3:\n        networkName = 'Ropsten';\n        break;\n      case 4:\n        networkName = 'Rinkeby';\n        break;\n      case 5:\n        networkName = 'Goerli';\n        break;\n      case 42:\n        networkName = 'Kovan';\n        break;\n      case '':\n        networkName = 'None';\n        break;\n      default:\n        networkName = 'Custom';\n        break;\n    }\n    return networkName;\n  },\n\n  // Current browser is detected as mobile\n  isMobileDevice: () => {\n    const mobilePlatform = /Mobi|Android/i.test(navigator.userAgent)\n      ? true\n      : false;\n\n    return mobilePlatform;\n  },\n\n  // Checks browser window for available web3 or ethereum objects\n  hasWeb3Available: () => {\n    const web3 = typeof window.web3 !== 'undefined';\n    const ethereum = typeof window.ethereum !== 'undefined';\n    const web3Available = web3 || ethereum;\n\n    return web3Available;\n  },\n};\n\nexport default funcs;\n"],"names":["funcs","browserIsWeb3Capable","browser","Bowser","getParser","window","navigator","userAgent","parse","parsedResult","validBrowser","satisfies","desktop","chrome","firefox","opera","web3Capable","hasWeb3Available","getEthNetworkNameById","networkId","networkName","isMobileDevice","mobilePlatform","test","web3","ethereum","web3Available"],"mappings":";;;;;;;;EAGA,IAAMA,KAAK,GAAG;EACZC,EAAAA,oBAAoB,EAAE,gCAAM;EAC1B;EACA,QAAMC,OAAO,GAAGC,MAAM,CAACC,SAAP,CAAiBC,MAAM,CAACC,SAAP,CAAiBC,SAAlC,CAAhB;EACA,QAAMA,SAAS,GAAGL,OAAO,CAACM,KAAR,GAAgBC,YAAlC;EAEA,QAAMC,YAAY,GAAGR,OAAO,CAACS,SAAR,CAAkB;EACrCC,MAAAA,OAAO,EAAE;EACPC,QAAAA,MAAM,EAAE,KADD;EAEPC,QAAAA,OAAO,EAAE,KAFF;EAGPC,QAAAA,KAAK,EAAE;EAHA;EAD4B,KAAlB,IAOjB,IAPiB,GAQjB,KARJ;EAUA,QAAMC,WAAW,GAAGN,YAAY,IAAIV,KAAK,CAACiB,gBAAN,EAApC;EAEA,WAAOD,WAAP;EACD,GAnBW;EAqBZ;EACAE,EAAAA,qBAAqB,EAAE,+BAAAC,SAAS,EAAI;EAClC,QAAIC,WAAW,GAAG,EAAlB;;EAEA,QAAI,OAAOD,SAAP,KAAqB,WAAzB,EAAsC;EACpCA,MAAAA,SAAS,GAAG,EAAZ;EACD;;EAED,YAAQA,SAAR;EACE,WAAK,CAAL;EACEC,QAAAA,WAAW,GAAG,MAAd;EACA;;EACF,WAAK,CAAL;EACEA,QAAAA,WAAW,GAAG,SAAd;EACA;;EACF,WAAK,CAAL;EACEA,QAAAA,WAAW,GAAG,SAAd;EACA;;EACF,WAAK,CAAL;EACEA,QAAAA,WAAW,GAAG,QAAd;EACA;;EACF,WAAK,EAAL;EACEA,QAAAA,WAAW,GAAG,OAAd;EACA;;EACF,WAAK,EAAL;EACEA,QAAAA,WAAW,GAAG,MAAd;EACA;;EACF;EACEA,QAAAA,WAAW,GAAG,QAAd;EACA;EArBJ;;EAuBA,WAAOA,WAAP;EACD,GArDW;EAuDZ;EACAC,EAAAA,cAAc,EAAE,0BAAM;EACpB,QAAMC,cAAc,GAAG,gBAAgBC,IAAhB,CAAqBjB,SAAS,CAACC,SAA/B,IACnB,IADmB,GAEnB,KAFJ;EAIA,WAAOe,cAAP;EACD,GA9DW;EAgEZ;EACAL,EAAAA,gBAAgB,EAAE,4BAAM;EACtB,QAAMO,IAAI,GAAG,OAAOnB,MAAM,CAACmB,IAAd,KAAuB,WAApC;EACA,QAAMC,QAAQ,GAAG,OAAOpB,MAAM,CAACoB,QAAd,KAA2B,WAA5C;EACA,QAAMC,aAAa,GAAGF,IAAI,IAAIC,QAA9B;EAEA,WAAOC,aAAP;EACD;EAvEW,CAAd;;;;;;;;"}