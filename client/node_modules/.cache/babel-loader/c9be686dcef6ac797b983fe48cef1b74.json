{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/gerwin/code/gerwinf/simple-marketplace/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Box, Form, Input, Select, Field, Button, Text, Checkbox, Radio, Flex, Card, Icon, MetaMaskButton, Image, Heading, Table } from \"rimble-ui\"; // import { useWeb3Context } from 'web3-react'\n\nimport logo from './logo.png';\nimport './App.css';\nimport Web3 from \"web3\";\nimport getWeb3 from \"./getWeb3\";\nimport MarketplaceContract from \"./contracts/Marketplace.json\";\nimport { MarketplaceDeployed } from \"./abi/abi.js\";\nimport { SupplyChainDeployed } from \"./abi/SupplyChainDeployed.js\";\n\nfunction App() {\n  _s();\n\n  // const [state, setstate] = useState(initialState)\n  const [count, setCount] = useState(0);\n  const [lastProductsNames, setlastProductsNames] = useState([]);\n  const [lastProductsPrices, setlastProductsPrices] = useState([]);\n  const [lastProductsIds, setlastProductsIds] = useState([]);\n  const [inputName, setInputName] = useState(\"\");\n  const [inputPrice, setInputPrice] = useState(\"\");\n  const [inputId, setInputId] = useState(\"\");\n  const [inputAmount, setInputAmount] = useState(\"\");\n  const [web3, setWeb3] = useState(undefined);\n  const [contractMarketplace, setContractMarketplace] = useState(\"\");\n  const [accounts, setAccounts] = useState([]); // Comment option 1 or 2, then set corresponding address\n\n  useEffect(() => {\n    const init = async () => {\n      try {\n        // Option 1: Ganache\n        // Get network provider and web3 instance.\n\n        /* const web3 = await getWeb3();\n         // Use web3 to get the user's accounts.\n        const accounts = await web3.eth.getAccounts();\n         // Get the Marketplace contract instance.\n        const networkId = await web3.eth.net.getId();\n        const deployedNetwork = MarketplaceContract.networks[networkId];\n        const instanceMarketplace = new web3.eth.Contract(\n          MarketplaceContract.abi,\n          deployedNetwork && deployedNetwork.address,\n        ); */\n        // Option 2: GÃ¶rli\n        // Get the deployed Supply Chain contract\n        const web3 = new Web3(Web3.givenProvider);\n        const contractAddress = \"0x245387e1E7210A367886b24e0D814D4df4961005\";\n        /* \"0xA05De8c36234Fb74a0FD6f216a3568dbBe5400Eb\"; */\n\n        const deployedContract = new web3.eth.Contract(MarketplaceDeployed\n        /* SupplyChainDeployed */\n        , contractAddress);\n        const accounts = await web3.eth.getAccounts(); // Set web3, accounts, and contract to the state, and then proceed with an\n        // example of interacting with the contract's methods.\n        // Init state\n\n        const count = await (\n          /* instanceMarketplace */\n          deployedContract.methods.getCount().call()\n        );\n        setWeb3(web3);\n        setAccounts(accounts);\n        setContractMarketplace(\n        /* instanceMarketplace */\n        deployedContract);\n        setCount(count);\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(`Failed to load web3, accounts, or contract. Check console for details.`);\n        console.error(error);\n      }\n    };\n\n    init();\n  }, []);\n\n  const addItem = async t => {\n    t.preventDefault();\n    const account = accounts[0];\n    const contract = contractMarketplace;\n    const productsObj = {\n      MacBookPro: Web3.utils.toWei('2', 'ether'),\n      iPad: Web3.utils.toWei('1', 'ether'),\n      PlayStation: Web3.utils.toWei('2', 'ether'),\n      Sonos: Web3.utils.toWei('3', 'ether')\n    };\n    const productName = Object.keys(productsObj)[Math.floor(Math.random() * Object.keys(productsObj).length)];\n    const productPrice = productsObj[productName];\n    await contract.methods.addProduct(productName, productPrice).send({\n      from: account\n    }); // Alternative with gas estimate\n    // const gas = await contract.methods.addProduct(productName, productPrice).estimateGas();\n    // const post = await contract.methods.addProduct(productName, productPrice).send({\n    //   from: account,\n    //   gas,\n    // });\n  };\n\n  const showProducts = async t => {\n    t.preventDefault();\n    const contract = contractMarketplace; // const productNumber = await contract.methods.getCount().call();\n\n    const numProducts = await contract.methods.getCount().call();\n    ;\n    const numShown = 5;\n\n    for (let i = numProducts - 1; i > numProducts - numShown; i--) {\n      const post = await contract.methods.fetchProduct(i).call();\n      setlastProductsNames(prevState => [...prevState, post.name]);\n      setlastProductsPrices(prevState => [...prevState, post.price]);\n      setlastProductsIds(prevState => [...prevState, post.id]);\n    }\n  };\n\n  const handleSubmitAddItem = e => {\n    alert('A product was added: ' + inputName + inputPrice);\n    e.preventDefault();\n    const account = accounts[0];\n    const contract = contractMarketplace;\n    const productName = inputName;\n    const productPrice = Web3.utils.toWei(inputPrice, 'ether');\n    contract.methods.addProduct(productName, productPrice).send({\n      from: account\n    }); // Alternative with gas estimate\n    // const gas = await contract.methods.addProduct(productName, productPrice).estimateGas();\n    // const post = await contract.methods.addProduct(productName, productPrice).send({\n    //   from: account,\n    //   gas,\n    // });\n  };\n\n  const handleSubmitBuyItem = e => {\n    alert('Id of product to be purchased: ' + inputId);\n    e.preventDefault();\n    const account = accounts[0];\n    const contract = contractMarketplace;\n    const productId = inputId;\n    const amount = Web3.utils.toWei(inputAmount, 'ether');\n    contract.methods.buyProduct(productId).send({\n      from: account,\n      value: amount\n    });\n  };\n\n  const handleInputName = e => {\n    setInputName(e.target.value);\n    validateInput(e);\n  };\n\n  const handleInputPrice = e => {\n    setInputPrice(e.target.value);\n    validateInput(e);\n  };\n\n  const handleInputId = e => {\n    setInputId(e.target.value);\n    validateInput(e);\n  };\n\n  const handleInputAmount = e => {\n    setInputAmount(e.target.value);\n    validateInput(e);\n  };\n\n  const validateInput = e => {\n    e.target.parentNode.classList.add(\"was-validated\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Marketplace Dapp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"A decentralized marketplace powered by Ethereum\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MetaMaskButton.Outline, {\n        size: 'medium',\n        children: \"Connect with MetaMask\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Smart Contract Tests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Contract: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \" Marketplace \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 20\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Connected account: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\" \", accounts, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 29\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Products online: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\" \", count, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 27\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmitAddItem,\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            placeholder: \"Enter product name\",\n            value: inputName,\n            onChange: handleInputName,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            placeholder: \"Enter price in ETH\",\n            value: inputPrice,\n            onChange: handleInputPrice,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"submit\",\n            value: \"Add product\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      size: 'medium',\n      onClick: addItem,\n      children: \"Add random product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      size: 'medium',\n      onClick: showProducts,\n      children: \"Show last products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: lastProductsIds.map(e => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\"Id \", e]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: lastProductsNames.map(e => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: e\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: lastProductsPrices.map(e => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [Web3.utils.fromWei(e, 'ether'), \" ETH\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmitBuyItem,\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            placeholder: \"Enter product id\",\n            value: inputId,\n            onChange: handleInputId,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            placeholder: \"Enter amount in ETH\",\n            value: inputAmount,\n            onChange: handleInputAmount,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"submit\",\n            value: \"Buy product\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"mY3YExYAcWEmczepjt3JMVYgCRU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/gerwin/code/gerwinf/simple-marketplace/client/src/App.js"],"names":["React","useState","useEffect","Box","Form","Input","Select","Field","Button","Text","Checkbox","Radio","Flex","Card","Icon","MetaMaskButton","Image","Heading","Table","logo","Web3","getWeb3","MarketplaceContract","MarketplaceDeployed","SupplyChainDeployed","App","count","setCount","lastProductsNames","setlastProductsNames","lastProductsPrices","setlastProductsPrices","lastProductsIds","setlastProductsIds","inputName","setInputName","inputPrice","setInputPrice","inputId","setInputId","inputAmount","setInputAmount","web3","setWeb3","undefined","contractMarketplace","setContractMarketplace","accounts","setAccounts","init","givenProvider","contractAddress","deployedContract","eth","Contract","getAccounts","methods","getCount","call","error","alert","console","addItem","t","preventDefault","account","contract","productsObj","MacBookPro","utils","toWei","iPad","PlayStation","Sonos","productName","Object","keys","Math","floor","random","length","productPrice","addProduct","send","from","showProducts","numProducts","numShown","i","post","fetchProduct","prevState","name","price","id","handleSubmitAddItem","e","handleSubmitBuyItem","productId","amount","buyProduct","value","handleInputName","target","validateInput","handleInputPrice","handleInputId","handleInputAmount","parentNode","classList","add","map","fromWei"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,KAApB,EAA2BC,MAA3B,EAAmCC,KAAnC,EAA0CC,MAA1C,EAAkDC,IAAlD,EAAwDC,QAAxD,EAAkEC,KAAlE,EAAyEC,IAAzE,EAA+EC,IAA/E,EAAqFC,IAArF,EAA2FC,cAA3F,EAA2GC,KAA3G,EAAkHC,OAAlH,EAA2HC,KAA3H,QAAwI,WAAxI,C,CACA;;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,mBAAP,MAAgC,8BAAhC;AACA,SAASC,mBAAT,QAAoC,cAApC;AACA,SAASC,mBAAT,QAAoC,8BAApC;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoB1B,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAAC2B,iBAAD,EAAoBC,oBAApB,IAA4C5B,QAAQ,CAAC,EAAD,CAA1D;AACA,QAAM,CAAC6B,kBAAD,EAAqBC,qBAArB,IAA8C9B,QAAQ,CAAC,EAAD,CAA5D;AACA,QAAM,CAAC+B,eAAD,EAAkBC,kBAAlB,IAAwChC,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACiC,SAAD,EAAYC,YAAZ,IAA4BlC,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACmC,UAAD,EAAaC,aAAb,IAA8BpC,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACqC,OAAD,EAAUC,UAAV,IAAwBtC,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACuC,WAAD,EAAcC,cAAd,IAAgCxC,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACyC,IAAD,EAAOC,OAAP,IAAkB1C,QAAQ,CAAC2C,SAAD,CAAhC;AACA,QAAM,CAACC,mBAAD,EAAsBC,sBAAtB,IAAgD7C,QAAQ,CAAC,EAAD,CAA9D;AACA,QAAM,CAAC8C,QAAD,EAAWC,WAAX,IAA0B/C,QAAQ,CAAC,EAAD,CAAxC,CAZa,CAcb;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM+C,IAAI,GAAG,YAAY;AACvB,UAAI;AACF;AACA;;AACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIQ;AACA;AACA,cAAMP,IAAI,GAAG,IAAItB,IAAJ,CAASA,IAAI,CAAC8B,aAAd,CAAb;AACA,cAAMC,eAAe,GAAG,4CAAxB;AAAsE;;AACtE,cAAMC,gBAAgB,GAAG,IAAIV,IAAI,CAACW,GAAL,CAASC,QAAb,CAAsB/B;AAAmB;AAAzC,UAAoE4B,eAApE,CAAzB;AAEA,cAAMJ,QAAQ,GAAG,MAAML,IAAI,CAACW,GAAL,CAASE,WAAT,EAAvB,CAtBE,CAwBF;AACA;AAEA;;AACA,cAAM7B,KAAK,GAAG;AAAM;AAAyB0B,UAAAA,gBAAgB,CAACI,OAAjB,CAAyBC,QAAzB,GAAoCC,IAApC;AAA/B,SAAd;AAEAf,QAAAA,OAAO,CAACD,IAAD,CAAP;AACAM,QAAAA,WAAW,CAACD,QAAD,CAAX;AACAD,QAAAA,sBAAsB;AAAC;AAAyBM,QAAAA,gBAA1B,CAAtB;AACAzB,QAAAA,QAAQ,CAACD,KAAD,CAAR;AAED,OAnCD,CAmCE,OAAOiC,KAAP,EAAc;AACd;AACAC,QAAAA,KAAK,CACF,wEADE,CAAL;AAGAC,QAAAA,OAAO,CAACF,KAAR,CAAcA,KAAd;AACD;AACF,KA3CD;;AA4CAV,IAAAA,IAAI;AACL,GA9CQ,EA8CN,EA9CM,CAAT;;AAiDA,QAAMa,OAAO,GAAG,MAAOC,CAAP,IAAa;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,OAAO,GAAGlB,QAAQ,CAAC,CAAD,CAAxB;AACA,UAAMmB,QAAQ,GAAGrB,mBAAjB;AAEA,UAAMsB,WAAW,GAAG;AAClBC,MAAAA,UAAU,EAAEhD,IAAI,CAACiD,KAAL,CAAWC,KAAX,CAAiB,GAAjB,EAAsB,OAAtB,CADM;AAElBC,MAAAA,IAAI,EAAEnD,IAAI,CAACiD,KAAL,CAAWC,KAAX,CAAiB,GAAjB,EAAsB,OAAtB,CAFY;AAGlBE,MAAAA,WAAW,EAAEpD,IAAI,CAACiD,KAAL,CAAWC,KAAX,CAAiB,GAAjB,EAAsB,OAAtB,CAHK;AAIlBG,MAAAA,KAAK,EAAErD,IAAI,CAACiD,KAAL,CAAWC,KAAX,CAAiB,GAAjB,EAAsB,OAAtB;AAJW,KAApB;AAOA,UAAMI,WAAW,GAAGC,MAAM,CAACC,IAAP,CAAYT,WAAZ,EAAyBU,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,MAAM,CAACC,IAAP,CAAYT,WAAZ,EAAyBa,MAApD,CAAzB,CAApB;AACA,UAAMC,YAAY,GAAGd,WAAW,CAACO,WAAD,CAAhC;AAEA,UAAMR,QAAQ,CAACV,OAAT,CAAiB0B,UAAjB,CAA4BR,WAA5B,EAAyCO,YAAzC,EAAuDE,IAAvD,CAA4D;AAACC,MAAAA,IAAI,EAAEnB;AAAP,KAA5D,CAAN,CAf2B,CAgB3B;AACA;AACA;AACA;AACA;AACA;AACD,GAtBD;;AAyBA,QAAMoB,YAAY,GAAG,MAAOtB,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAME,QAAQ,GAAGrB,mBAAjB,CAFgC,CAGhC;;AACA,UAAMyC,WAAW,GAAG,MAAMpB,QAAQ,CAACV,OAAT,CAAiBC,QAAjB,GAA4BC,IAA5B,EAA1B;AAA6D;AAC7D,UAAM6B,QAAQ,GAAG,CAAjB;;AAEA,SAAK,IAAIC,CAAC,GAAGF,WAAW,GAAG,CAA3B,EAA8BE,CAAC,GAAGF,WAAW,GAAGC,QAAhD,EAA0DC,CAAC,EAA3D,EAA+D;AAC7D,YAAMC,IAAI,GAAG,MAAMvB,QAAQ,CAACV,OAAT,CAAiBkC,YAAjB,CAA8BF,CAA9B,EAAiC9B,IAAjC,EAAnB;AACA7B,MAAAA,oBAAoB,CAAE8D,SAAS,IAAI,CAAC,GAAGA,SAAJ,EAAeF,IAAI,CAACG,IAApB,CAAf,CAApB;AACA7D,MAAAA,qBAAqB,CAAE4D,SAAS,IAAI,CAAC,GAAGA,SAAJ,EAAeF,IAAI,CAACI,KAApB,CAAf,CAArB;AACA5D,MAAAA,kBAAkB,CAAE0D,SAAS,IAAI,CAAC,GAAGA,SAAJ,EAAeF,IAAI,CAACK,EAApB,CAAf,CAAlB;AACD;AACF,GAbD;;AAeA,QAAMC,mBAAmB,GAAGC,CAAC,IAAI;AAC/BpC,IAAAA,KAAK,CAAC,0BAA0B1B,SAA1B,GAAsCE,UAAvC,CAAL;AAEA4D,IAAAA,CAAC,CAAChC,cAAF;AACA,UAAMC,OAAO,GAAGlB,QAAQ,CAAC,CAAD,CAAxB;AACA,UAAMmB,QAAQ,GAAGrB,mBAAjB;AACA,UAAM6B,WAAW,GAAGxC,SAApB;AACA,UAAM+C,YAAY,GAAG7D,IAAI,CAACiD,KAAL,CAAWC,KAAX,CAAiBlC,UAAjB,EAA6B,OAA7B,CAArB;AAEA8B,IAAAA,QAAQ,CAACV,OAAT,CAAiB0B,UAAjB,CAA4BR,WAA5B,EAAyCO,YAAzC,EAAuDE,IAAvD,CAA4D;AAAEC,MAAAA,IAAI,EAAEnB;AAAR,KAA5D,EAT+B,CAU/B;AACA;AACA;AACA;AACA;AACA;AAED,GAjBD;;AAmBA,QAAMgC,mBAAmB,GAAGD,CAAC,IAAI;AAC/BpC,IAAAA,KAAK,CAAC,oCAAoCtB,OAArC,CAAL;AACA0D,IAAAA,CAAC,CAAChC,cAAF;AACA,UAAMC,OAAO,GAAGlB,QAAQ,CAAC,CAAD,CAAxB;AACA,UAAMmB,QAAQ,GAAGrB,mBAAjB;AAEA,UAAMqD,SAAS,GAAG5D,OAAlB;AACA,UAAM6D,MAAM,GAAG/E,IAAI,CAACiD,KAAL,CAAWC,KAAX,CAAiB9B,WAAjB,EAA8B,OAA9B,CAAf;AAEA0B,IAAAA,QAAQ,CAACV,OAAT,CAAiB4C,UAAjB,CAA4BF,SAA5B,EAAuCf,IAAvC,CAA4C;AAAEC,MAAAA,IAAI,EAAEnB,OAAR;AAAiBoC,MAAAA,KAAK,EAAEF;AAAxB,KAA5C;AACD,GAVD;;AAaA,QAAMG,eAAe,GAAGN,CAAC,IAAI;AAC3B7D,IAAAA,YAAY,CAAC6D,CAAC,CAACO,MAAF,CAASF,KAAV,CAAZ;AACAG,IAAAA,aAAa,CAACR,CAAD,CAAb;AACD,GAHD;;AAKA,QAAMS,gBAAgB,GAAGT,CAAC,IAAI;AAC5B3D,IAAAA,aAAa,CAAC2D,CAAC,CAACO,MAAF,CAASF,KAAV,CAAb;AACAG,IAAAA,aAAa,CAACR,CAAD,CAAb;AACD,GAHD;;AAKA,QAAMU,aAAa,GAAGV,CAAC,IAAI;AACzBzD,IAAAA,UAAU,CAACyD,CAAC,CAACO,MAAF,CAASF,KAAV,CAAV;AACAG,IAAAA,aAAa,CAACR,CAAD,CAAb;AACD,GAHD;;AAKA,QAAMW,iBAAiB,GAAGX,CAAC,IAAI;AAC7BvD,IAAAA,cAAc,CAACuD,CAAC,CAACO,MAAF,CAASF,KAAV,CAAd;AACAG,IAAAA,aAAa,CAACR,CAAD,CAAb;AACD,GAHD;;AAKA,QAAMQ,aAAa,GAAGR,CAAC,IAAI;AACzBA,IAAAA,CAAC,CAACO,MAAF,CAASK,UAAT,CAAoBC,SAApB,CAA8BC,GAA9B,CAAkC,eAAlC;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AAAK,QAAA,GAAG,EAAE3F,IAAV;AAAgB,QAAA,SAAS,EAAC,UAA1B;AAAqC,QAAA,GAAG,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,cAAD,CAAgB,OAAhB;AAAwB,QAAA,IAAI,EAAE,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,eASE;AAAA,4CAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,eAWE;AAAA,qDAAsB;AAAA,wBAAU4B,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,eAYE;AAAA,mDAAoB;AAAA,wBAAUrB,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF,eAcE,QAAC,IAAD;AAAM,MAAA,cAAc,EAAC,QAArB;AAAA,6BACE,QAAC,GAAD;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,QAAQ,EAAEqE,mBAAhB;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,WAAW,EAAC,oBAA/B;AAAoD,YAAA,KAAK,EAAE7D,SAA3D;AAAsE,YAAA,QAAQ,EAAEoE,eAAhF;AAAiG,YAAA,QAAQ,EAAE;AAA3G;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,WAAW,EAAC,oBAA/B;AAAoD,YAAA,KAAK,EAAElE,UAA3D;AAAuE,YAAA,QAAQ,EAAEqE,gBAAjF;AAAmG,YAAA,QAAQ,EAAE;AAA7G;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,QAAZ;AAAqB,YAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAdF,eAwBE;AAAA;AAAA;AAAA;AAAA,YAxBF,eA0BE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAE,QAAd;AAAwB,MAAA,OAAO,EAAE3C,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA1BF,eA8BE;AAAA;AAAA;AAAA;AAAA,YA9BF,eAgCE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAE,QAAd;AAAwB,MAAA,OAAO,EAAEuB,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhCF,eAoCE;AAAA;AAAA;AAAA;AAAA,YApCF,eAsCE,QAAC,KAAD;AAAA,6BACE;AAAA,gCACE;AAAA,oBACGrD,eAAe,CAAC+E,GAAhB,CAAoBf,CAAC,iBACpB;AAAA,mCAAI;AAAA,gCAAYA,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBADF,eAME;AAAA,oBACGpE,iBAAiB,CAACmF,GAAlB,CAAsBf,CAAC,iBACtB;AAAA,sBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBANF,eAWE;AAAA,oBACGlE,kBAAkB,CAACiF,GAAnB,CAAuBf,CAAC,iBACvB;AAAA,uBAAK5E,IAAI,CAACiD,KAAL,CAAW2C,OAAX,CAAmBhB,CAAnB,EAAsB,OAAtB,CAAL;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAtCF,eAmEE,QAAC,IAAD;AAAM,MAAA,cAAc,EAAC,QAArB;AAAA,6BACE,QAAC,GAAD;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,QAAQ,EAAEC,mBAAhB;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,WAAW,EAAC,kBAA/B;AAAkD,YAAA,KAAK,EAAE3D,OAAzD;AAAkE,YAAA,QAAQ,EAAEoE,aAA5E;AAA2F,YAAA,QAAQ,EAAE;AAArG;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,WAAW,EAAC,qBAA/B;AAAqD,YAAA,KAAK,EAAElE,WAA5D;AAAyE,YAAA,QAAQ,EAAEmE,iBAAnF;AAAsG,YAAA,QAAQ,EAAE;AAAhH;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,QAAZ;AAAqB,YAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAnEF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgFD;;GAhPQlF,G;;KAAAA,G;AAkPT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Box, Form, Input, Select, Field, Button, Text, Checkbox, Radio, Flex, Card, Icon, MetaMaskButton, Image, Heading, Table } from \"rimble-ui\";\n// import { useWeb3Context } from 'web3-react'\nimport logo from './logo.png';\nimport './App.css';\nimport Web3 from \"web3\";\nimport getWeb3 from \"./getWeb3\";\nimport MarketplaceContract from \"./contracts/Marketplace.json\";\nimport { MarketplaceDeployed } from \"./abi/abi.js\";\nimport { SupplyChainDeployed } from \"./abi/SupplyChainDeployed.js\";\n\nfunction App() {\n  // const [state, setstate] = useState(initialState)\n  const [count, setCount] = useState(0);\n  const [lastProductsNames, setlastProductsNames] = useState([]);\n  const [lastProductsPrices, setlastProductsPrices] = useState([]);\n  const [lastProductsIds, setlastProductsIds] = useState([]);\n  const [inputName, setInputName] = useState(\"\");\n  const [inputPrice, setInputPrice] = useState(\"\");\n  const [inputId, setInputId] = useState(\"\");\n  const [inputAmount, setInputAmount] = useState(\"\");\n  const [web3, setWeb3] = useState(undefined);\n  const [contractMarketplace, setContractMarketplace] = useState(\"\");\n  const [accounts, setAccounts] = useState([]);\n\n  // Comment option 1 or 2, then set corresponding address\n  useEffect(() => {\n    const init = async () => {\n      try {\n        // Option 1: Ganache\n        // Get network provider and web3 instance.\n        /* const web3 = await getWeb3();\n\n        // Use web3 to get the user's accounts.\n        const accounts = await web3.eth.getAccounts();\n\n        // Get the Marketplace contract instance.\n        const networkId = await web3.eth.net.getId();\n        const deployedNetwork = MarketplaceContract.networks[networkId];\n        const instanceMarketplace = new web3.eth.Contract(\n          MarketplaceContract.abi,\n          deployedNetwork && deployedNetwork.address,\n        ); */\n\n        // Option 2: GÃ¶rli\n        // Get the deployed Supply Chain contract\n        const web3 = new Web3(Web3.givenProvider);\n        const contractAddress = \"0x245387e1E7210A367886b24e0D814D4df4961005\"; /* \"0xA05De8c36234Fb74a0FD6f216a3568dbBe5400Eb\"; */\n        const deployedContract = new web3.eth.Contract(MarketplaceDeployed/* SupplyChainDeployed */, contractAddress);\n\n        const accounts = await web3.eth.getAccounts();\n\n        // Set web3, accounts, and contract to the state, and then proceed with an\n        // example of interacting with the contract's methods.\n\n        // Init state\n        const count = await /* instanceMarketplace */deployedContract.methods.getCount().call();\n\n        setWeb3(web3);\n        setAccounts(accounts);\n        setContractMarketplace(/* instanceMarketplace */deployedContract);\n        setCount(count);\n\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(\n          `Failed to load web3, accounts, or contract. Check console for details.`,\n        );\n        console.error(error);\n      }\n    }\n    init();\n  }, []);\n\n\n  const addItem = async (t) => {\n    t.preventDefault();\n    const account = accounts[0];\n    const contract = contractMarketplace;\n\n    const productsObj = {\n      MacBookPro: Web3.utils.toWei('2', 'ether'),\n      iPad: Web3.utils.toWei('1', 'ether'),\n      PlayStation: Web3.utils.toWei('2', 'ether'),\n      Sonos: Web3.utils.toWei('3', 'ether')\n    }\n\n    const productName = Object.keys(productsObj)[Math.floor(Math.random() * Object.keys(productsObj).length)];\n    const productPrice = productsObj[productName];\n\n    await contract.methods.addProduct(productName, productPrice).send({from: account});\n    // Alternative with gas estimate\n    // const gas = await contract.methods.addProduct(productName, productPrice).estimateGas();\n    // const post = await contract.methods.addProduct(productName, productPrice).send({\n    //   from: account,\n    //   gas,\n    // });\n  };\n\n\n  const showProducts = async (t) => {\n    t.preventDefault();\n    const contract = contractMarketplace;\n    // const productNumber = await contract.methods.getCount().call();\n    const numProducts = await contract.methods.getCount().call();;\n    const numShown = 5;\n\n    for (let i = numProducts - 1; i > numProducts - numShown; i--) {\n      const post = await contract.methods.fetchProduct(i).call()\n      setlastProductsNames((prevState => [...prevState, post.name]));\n      setlastProductsPrices((prevState => [...prevState, post.price]));\n      setlastProductsIds((prevState => [...prevState, post.id]));\n    }\n  }\n\n  const handleSubmitAddItem = e => {\n    alert('A product was added: ' + inputName + inputPrice);\n\n    e.preventDefault();\n    const account = accounts[0]\n    const contract = contractMarketplace;\n    const productName = inputName;\n    const productPrice = Web3.utils.toWei(inputPrice, 'ether');\n\n    contract.methods.addProduct(productName, productPrice).send({ from: account });\n    // Alternative with gas estimate\n    // const gas = await contract.methods.addProduct(productName, productPrice).estimateGas();\n    // const post = await contract.methods.addProduct(productName, productPrice).send({\n    //   from: account,\n    //   gas,\n    // });\n\n  }\n\n  const handleSubmitBuyItem = e => {\n    alert('Id of product to be purchased: ' + inputId);\n    e.preventDefault();\n    const account = accounts[0]\n    const contract = contractMarketplace;\n\n    const productId = inputId;\n    const amount = Web3.utils.toWei(inputAmount, 'ether');\n\n    contract.methods.buyProduct(productId).send({ from: account, value: amount })\n  }\n\n\n  const handleInputName = e => {\n    setInputName(e.target.value);\n    validateInput(e);\n  };\n\n  const handleInputPrice = e => {\n    setInputPrice(e.target.value);\n    validateInput(e);\n  }\n\n  const handleInputId = e => {\n    setInputId(e.target.value);\n    validateInput(e);\n  }\n\n  const handleInputAmount = e => {\n    setInputAmount(e.target.value);\n    validateInput(e);\n  }\n\n  const validateInput = e => {\n    e.target.parentNode.classList.add(\"was-validated\");\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <h1>Marketplace Dapp</h1>\n        <p>A decentralized marketplace powered by Ethereum</p>\n        <MetaMaskButton.Outline size={'medium'}>Connect with MetaMask</MetaMaskButton.Outline>\n      </div>\n\n      <h2>Smart Contract Tests</h2>\n      <p>Contract: <strong> Marketplace </strong> </p>\n      {/* {contractMarketplace.options.address} */}\n      <p>Connected account: <strong> {accounts} </strong> </p>\n      <p>Products online: <strong> {count} </strong> </p>\n\n      <Flex justifyContent='center'>\n        <Box>\n          <Form onSubmit={handleSubmitAddItem}>\n            <Input type=\"text\" placeholder=\"Enter product name\" value={inputName} onChange={handleInputName} required={true} />\n            <Input type=\"text\" placeholder=\"Enter price in ETH\" value={inputPrice} onChange={handleInputPrice} required={true} />\n            <Input type=\"submit\" value=\"Add product\" />\n          </Form>\n        </Box>\n      </Flex>\n\n      <p></p>\n\n      <Button size={'medium'} onClick={addItem}>\n        Add random product\n      </Button>\n\n      <p></p>\n\n      <Button size={'medium'} onClick={showProducts}>\n        Show last products\n      </Button>\n\n      <p></p>\n\n      <Table>\n        <tbody>\n          <tr>\n            {lastProductsIds.map(e =>\n              <td><strong>Id {e}</strong></td>\n            )}\n          </tr>\n          <tr>\n            {lastProductsNames.map(e =>\n              <td>{e}</td>\n            )}\n          </tr>\n          <tr>\n            {lastProductsPrices.map(e =>\n              <td>{Web3.utils.fromWei(e, 'ether')} ETH</td>\n            )}\n          </tr>\n          {/* <tr>\n            {lastProductsNames.map(e =>\n              <td>\n                <Button size={'medium'} onClick={addItem}>\n                  Buy {e}\n                </Button>\n              </td>\n            )}\n          </tr> */}\n        </tbody>\n      </Table>\n\n      <Flex justifyContent='center'>\n        <Box>\n          <Form onSubmit={handleSubmitBuyItem}>\n            <Input type=\"text\" placeholder=\"Enter product id\" value={inputId} onChange={handleInputId} required={true} />\n            <Input type=\"text\" placeholder=\"Enter amount in ETH\" value={inputAmount} onChange={handleInputAmount} required={true} />\n            <Input type=\"submit\" value=\"Buy product\" />\n          </Form>\n        </Box>\n      </Flex>\n\n    </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}