{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/gerwin/code/gerwinf/simple-marketplace/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Box, Form, Input, Button, Flex, MetaMaskButton, Table, EthAddress, QR } from \"rimble-ui\";\nimport logo from './logo.png';\nimport './App.css';\nimport Web3 from \"web3\";\nimport getWeb3 from \"./getWeb3\";\nimport MarketplaceContract from \"./contracts/Marketplace.json\";\nimport { MarketplaceDeployed } from \"./abi/MarketplaceDeployed.js\"; // import { contracts_build_directory } from \"../../truffle-config\";\n\nfunction App() {\n  _s();\n\n  // const [state, setstate] = useState(initialState)\n  const [count, setCount] = useState(0);\n  const [index, setIndex] = useState(0);\n  const [lastProductsObj, setlastProductsObj] = useState([]);\n  const [productsIndexed, setproductsIndexed] = useState([]);\n  const [inputName, setInputName] = useState(\"\");\n  const [inputPrice, setInputPrice] = useState(\"\");\n  const [inputId, setInputId] = useState(\"\");\n  const [inputAmount, setInputAmount] = useState(\"\");\n  const [networkId, setNetworkId] = useState(\"\");\n  const [contract, setContract] = useState(\"\");\n  const [accounts, setAccounts] = useState([]);\n  const [isActive, setIsActive] = useState(\"\"); // Comment option 1 or 2, then set corresponding address\n\n  useEffect(() => {\n    const init = async () => {\n      try {\n        // Get network provider and web3 instance.\n        const web3 = await getWeb3(); // Use web3 to get the user's accounts.\n        // const accounts = await web3.eth.getAccounts();\n        // Get the Marketplace contract instance.\n\n        const networkId = await web3.eth.net.getId();\n        const deployedNetwork = MarketplaceContract.networks[networkId];\n        const contract = new web3.eth.Contract(MarketplaceContract.abi, deployedNetwork && deployedNetwork.address); // Init state\n\n        const count = await contract.methods.getCount().call();\n        const status = await contract.methods.getContractStatus().call(); // setAccounts(accounts);\n\n        setContract(contract);\n        setCount(count);\n        setIsActive(status);\n        setNetworkId(networkId);\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(`Failed to load web3, accounts, or contract. Check console for details.`);\n        console.error(error);\n      }\n    };\n\n    init();\n  }, [accounts]);\n\n  const addItem = async t => {\n    t.preventDefault();\n    const account = accounts[0];\n    const productsObj = {\n      MacBookPro: Web3.utils.toWei('2', 'ether'),\n      iPad: Web3.utils.toWei('1', 'ether'),\n      PlayStation: Web3.utils.toWei('2', 'ether'),\n      Sonos: Web3.utils.toWei('3', 'ether')\n    };\n    const productName = Object.keys(productsObj)[Math.floor(Math.random() * Object.keys(productsObj).length)];\n    const productPrice = productsObj[productName];\n    await contract.methods.addProduct(productName, productPrice).send({\n      from: account\n    }); // Alternative with gas estimate\n    // const gas = await contract.methods.addProduct(productName, productPrice).estimateGas();\n    // const post = await contract.methods.addProduct(productName, productPrice).send({\n    //   from: account,\n    //   gas,\n    // });\n\n    window.location.reload();\n  };\n\n  const showProducts = async t => {\n    // t.preventDefault();\n    const numProducts = await contract.methods.getCount().call(); // Anzahl Produkte die angezeigt wurden von numProducts abziehen\n\n    const numShown = 5;\n    let index = 0;\n\n    for (let i = numProducts - 1; i > numProducts - numShown; i--) {\n      const post = await contract.methods.fetchProduct(i).call();\n      setlastProductsObj(prevState => [...prevState, post]);\n      index++;\n      productsIndexed.push({\n        index: index,\n        id: post.id,\n        name: post.name,\n        price: post.price\n      }); // Push post to array\n    }\n  };\n\n  const handleSubmitAddItem = async e => {\n    alert('A product was added: ' + inputName + inputPrice);\n    e.preventDefault();\n    const account = accounts[0];\n    const productName = inputName;\n    const productPrice = Web3.utils.toWei(inputPrice, 'ether');\n    await contract.methods.addProduct(productName, productPrice).send({\n      from: account\n    }); // Alternative with gas estimate\n    // const gas = await contract.methods.addProduct(productName, productPrice).estimateGas();\n    // const post = await contract.methods.addProduct(productName, productPrice).send({\n    //   from: account,\n    //   gas,\n    // });\n\n    showProducts();\n  };\n\n  const handleSubmitBuyItem = e => {\n    alert('Id of product to be purchased: ' + inputId);\n    e.preventDefault();\n    const account = accounts[0];\n    const productId = inputId;\n    const amount = Web3.utils.toWei(inputAmount, 'ether');\n    contract.methods.buyProduct(productId).send({\n      from: account,\n      value: amount\n    });\n  };\n\n  const buyItemDirect = (id, price) => {\n    const account = accounts[0]; // const index = 0;\n\n    const productId = id;\n    /* lastProductsObj[index].id; */\n\n    const amount = price;\n    /* lastProductsObj[index].price; */\n\n    console.log(id, price);\n    contract.methods.buyProduct(productId).send({\n      from: account,\n      value: amount\n    });\n  };\n\n  const toggleCircuitBreaker = async e => {\n    e.preventDefault();\n    alert('Contract will be paused if initiated by owner');\n    const account = accounts[0];\n    await contract.methods.toggleCircuitBreaker().send({\n      from: account\n    });\n    window.location.reload();\n  };\n\n  const killSwitch = e => {\n    e.preventDefault();\n    alert('Contract will be killed if initiated by owner');\n    const account = accounts[0];\n    contract.methods.kill().send({\n      from: account\n    });\n  };\n\n  const handleInputName = e => {\n    setInputName(e.target.value);\n    validateInput(e);\n  };\n\n  const handleInputPrice = e => {\n    setInputPrice(e.target.value);\n    validateInput(e);\n  };\n\n  const handleInputId = e => {\n    setInputId(e.target.value);\n    validateInput(e);\n  };\n\n  const handleInputAmount = e => {\n    setInputAmount(e.target.value);\n    validateInput(e);\n  };\n\n  const validateInput = e => {\n    e.target.parentNode.classList.add(\"was-validated\");\n  };\n\n  const connectMetamask = async e => {\n    e.preventDefault(); //Will Start the metamask extension\n\n    window.ethereum.request({\n      method: 'eth_requestAccounts'\n    });\n    await window.ethereum.enable();\n    window.location.reload();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Marketplace Dapp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"A decentralized marketplace powered by Ethereum\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MetaMaskButton.Outline, {\n        size: 'medium',\n        onClick: connectMetamask,\n        children: \"Connect with MetaMask\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Smart Contract Interaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Connected account: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\" \", accounts, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 29\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Current network id: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\" \", networkId, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 30\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Marketplace is open: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\" \", String(isActive), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 31\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Products online: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\" \", count, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 27\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmitAddItem,\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            placeholder: \"Enter product name\",\n            value: inputName,\n            onChange: handleInputName,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            placeholder: \"Enter price in ETH\",\n            value: inputPrice,\n            onChange: handleInputPrice,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"submit\",\n            value: \"Add product\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      size: 'medium',\n      onClick: addItem,\n      children: \"Add random product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      size: 'medium',\n      variant: \"success\",\n      onClick: showProducts,\n      children: \"Show new products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      size: 'medium',\n      variant: \"danger\",\n      onClick: toggleCircuitBreaker,\n      children: \"Toggle circuit breaker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      size: 'medium',\n      variant: \"danger\",\n      onClick: killSwitch,\n      children: \"Kill switch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: productsIndexed.map(e => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\"Id \", e.id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: productsIndexed.map(e => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: e.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: productsIndexed.map(e => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [Web3.utils.fromWei(e.price, 'ether'), \" ETH\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: productsIndexed.map(e => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              size: 'medium',\n              children: [\"Buy \", e.index]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmitBuyItem,\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            placeholder: \"Enter product id\",\n            value: inputId,\n            onChange: handleInputId,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            placeholder: \"Enter amount in ETH\",\n            value: inputAmount,\n            onChange: handleInputAmount,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"submit\",\n            value: \"Buy product\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"2ZjTJLFBflBVdbB+fkoOjp52p1w=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/gerwin/code/gerwinf/simple-marketplace/client/src/App.js"],"names":["React","useState","useEffect","Box","Form","Input","Button","Flex","MetaMaskButton","Table","EthAddress","QR","logo","Web3","getWeb3","MarketplaceContract","MarketplaceDeployed","App","count","setCount","index","setIndex","lastProductsObj","setlastProductsObj","productsIndexed","setproductsIndexed","inputName","setInputName","inputPrice","setInputPrice","inputId","setInputId","inputAmount","setInputAmount","networkId","setNetworkId","contract","setContract","accounts","setAccounts","isActive","setIsActive","init","web3","eth","net","getId","deployedNetwork","networks","Contract","abi","address","methods","getCount","call","status","getContractStatus","error","alert","console","addItem","t","preventDefault","account","productsObj","MacBookPro","utils","toWei","iPad","PlayStation","Sonos","productName","Object","keys","Math","floor","random","length","productPrice","addProduct","send","from","window","location","reload","showProducts","numProducts","numShown","i","post","fetchProduct","prevState","push","id","name","price","handleSubmitAddItem","e","handleSubmitBuyItem","productId","amount","buyProduct","value","buyItemDirect","log","toggleCircuitBreaker","killSwitch","kill","handleInputName","target","validateInput","handleInputPrice","handleInputId","handleInputAmount","parentNode","classList","add","connectMetamask","ethereum","request","method","enable","String","map","fromWei"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Box, Form, Input, Button, Flex, MetaMaskButton, Table, EthAddress, QR } from \"rimble-ui\";\nimport logo from './logo.png';\nimport './App.css';\nimport Web3 from \"web3\";\nimport getWeb3 from \"./getWeb3\";\nimport MarketplaceContract from \"./contracts/Marketplace.json\";\nimport { MarketplaceDeployed } from \"./abi/MarketplaceDeployed.js\";\n// import { contracts_build_directory } from \"../../truffle-config\";\n\nfunction App() {\n  // const [state, setstate] = useState(initialState)\n  const [count, setCount] = useState(0);\n  const [index, setIndex] = useState(0);\n  const [lastProductsObj, setlastProductsObj] = useState([]);\n  const [productsIndexed, setproductsIndexed] = useState([]);\n  const [inputName, setInputName] = useState(\"\");\n  const [inputPrice, setInputPrice] = useState(\"\");\n  const [inputId, setInputId] = useState(\"\");\n  const [inputAmount, setInputAmount] = useState(\"\");\n  const [networkId, setNetworkId] = useState(\"\");\n  const [contract, setContract] = useState(\"\");\n  const [accounts, setAccounts] = useState([]);\n  const [isActive, setIsActive] = useState(\"\");\n\n  // Comment option 1 or 2, then set corresponding address\n  useEffect(() => {\n    const init = async () => {\n      try {\n        // Get network provider and web3 instance.\n        const web3 = await getWeb3();\n        // Use web3 to get the user's accounts.\n        // const accounts = await web3.eth.getAccounts();\n        // Get the Marketplace contract instance.\n        const networkId = await web3.eth.net.getId();\n        const deployedNetwork = MarketplaceContract.networks[networkId];\n        const contract = new web3.eth.Contract(\n          MarketplaceContract.abi,\n          deployedNetwork && deployedNetwork.address,\n        );\n\n        // Init state\n        const count = await contract.methods.getCount().call();\n        const status = await contract.methods.getContractStatus().call();\n\n        // setAccounts(accounts);\n        setContract(contract);\n        setCount(count);\n        setIsActive(status);\n        setNetworkId(networkId);\n\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(\n          `Failed to load web3, accounts, or contract. Check console for details.`,\n        );\n        console.error(error);\n      }\n    }\n    init();\n  }, [accounts]);\n\n  const addItem = async (t) => {\n    t.preventDefault();\n    const account = accounts[0];\n\n    const productsObj = {\n      MacBookPro: Web3.utils.toWei('2', 'ether'),\n      iPad: Web3.utils.toWei('1', 'ether'),\n      PlayStation: Web3.utils.toWei('2', 'ether'),\n      Sonos: Web3.utils.toWei('3', 'ether')\n    }\n\n    const productName = Object.keys(productsObj)[Math.floor(Math.random() * Object.keys(productsObj).length)];\n    const productPrice = productsObj[productName];\n\n    await contract.methods.addProduct(productName, productPrice).send({from: account});\n    // Alternative with gas estimate\n    // const gas = await contract.methods.addProduct(productName, productPrice).estimateGas();\n    // const post = await contract.methods.addProduct(productName, productPrice).send({\n    //   from: account,\n    //   gas,\n    // });\n    window.location.reload();\n  };\n\n\n  const showProducts = async (t) => {\n    // t.preventDefault();\n    const numProducts = await contract.methods.getCount().call();\n    // Anzahl Produkte die angezeigt wurden von numProducts abziehen\n    const numShown = 5;\n    let index = 0;\n\n    for (let i = numProducts - 1; i > numProducts - numShown; i--) {\n      const post = await contract.methods.fetchProduct(i).call()\n      setlastProductsObj((prevState => [...prevState, post]));\n      index ++\n      productsIndexed.push({index: index, id: post.id, name: post.name, price: post.price})\n      // Push post to array\n    }\n  }\n\n  const handleSubmitAddItem = async (e) => {\n    alert('A product was added: ' + inputName + inputPrice);\n\n    e.preventDefault();\n    const account = accounts[0]\n    const productName = inputName;\n    const productPrice = Web3.utils.toWei(inputPrice, 'ether');\n\n    await contract.methods.addProduct(productName, productPrice).send({ from: account });\n    // Alternative with gas estimate\n    // const gas = await contract.methods.addProduct(productName, productPrice).estimateGas();\n    // const post = await contract.methods.addProduct(productName, productPrice).send({\n    //   from: account,\n    //   gas,\n    // });\n    showProducts();\n  }\n\n  const handleSubmitBuyItem = e => {\n    alert('Id of product to be purchased: ' + inputId);\n    e.preventDefault();\n    const account = accounts[0]\n\n    const productId = inputId;\n    const amount = Web3.utils.toWei(inputAmount, 'ether');\n\n    contract.methods.buyProduct(productId).send({ from: account, value: amount })\n  }\n\n\n  const buyItemDirect = (id, price) => {\n\n    const account = accounts[0]\n\n    // const index = 0;\n    const productId = id /* lastProductsObj[index].id; */\n    const amount = price /* lastProductsObj[index].price; */\n    console.log(id, price)\n\n    contract.methods.buyProduct(productId).send({ from: account, value: amount })\n  }\n\n  const toggleCircuitBreaker = async (e) => {\n    e.preventDefault();\n    alert('Contract will be paused if initiated by owner');\n    const account = accounts[0]\n    await contract.methods.toggleCircuitBreaker().send({from: account});\n    window.location.reload();\n  }\n\n  const killSwitch = (e) => {\n    e.preventDefault();\n    alert('Contract will be killed if initiated by owner');\n    const account = accounts[0]\n    contract.methods.kill().send({ from: account });\n  }\n\n  const handleInputName = e => {\n    setInputName(e.target.value);\n    validateInput(e);\n  };\n\n  const handleInputPrice = e => {\n    setInputPrice(e.target.value);\n    validateInput(e);\n  }\n\n  const handleInputId = e => {\n    setInputId(e.target.value);\n    validateInput(e);\n  }\n\n  const handleInputAmount = e => {\n    setInputAmount(e.target.value);\n    validateInput(e);\n  }\n\n  const validateInput = e => {\n    e.target.parentNode.classList.add(\"was-validated\");\n  };\n\n\n  const connectMetamask = async (e) => {\n    e.preventDefault();\n    //Will Start the metamask extension\n    window.ethereum.request({ method: 'eth_requestAccounts' });\n    await window.ethereum.enable();\n    window.location.reload();\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <h1>Marketplace Dapp</h1>\n        <p>A decentralized marketplace powered by Ethereum</p>\n        <MetaMaskButton.Outline size={'medium'} onClick={connectMetamask}>Connect with MetaMask</MetaMaskButton.Outline>\n\n      </div>\n\n      <h2>Smart Contract Interaction</h2>\n      <p>Connected account: <strong> {accounts} </strong> </p>\n      <p>Current network id: <strong> {networkId} </strong> </p>\n      <p>Marketplace is open: <strong> {String(isActive)} </strong> </p>\n      <p>Products online: <strong> {count} </strong> </p>\n\n      <Flex justifyContent='center'>\n        <Box>\n          <Form onSubmit={handleSubmitAddItem}>\n            <Input type=\"text\" placeholder=\"Enter product name\" value={inputName} onChange={handleInputName} required={true} />\n            <Input type=\"text\" placeholder=\"Enter price in ETH\" value={inputPrice} onChange={handleInputPrice} required={true} />\n            <Input type=\"submit\" value=\"Add product\" />\n          </Form>\n        </Box>\n      </Flex>\n\n      <p></p>\n\n      <Button size={'medium'} onClick={addItem}>\n        Add random product\n      </Button>\n\n      <Button size={'medium'} variant=\"success\" onClick={showProducts}>\n        Show new products\n      </Button>\n\n      <p></p>\n\n      <Button size={'medium'} variant=\"danger\" onClick={toggleCircuitBreaker}>\n        Toggle circuit breaker\n      </Button>\n\n      <Button size={'medium'} variant=\"danger\" onClick={killSwitch}>\n        Kill switch\n      </Button>\n\n      <p></p>\n\n      <Table>\n        <tbody>\n          <tr>\n            {productsIndexed.map(e =>\n              <td><strong>Id {e.id}</strong></td>\n            )}\n          </tr>\n          <tr>\n            {productsIndexed.map(e =>\n              <td>{e.name}</td>\n            )}\n          </tr>\n          <tr>\n            {productsIndexed.map(e =>\n              <td>{Web3.utils.fromWei(e.price, 'ether')} ETH</td>\n            )}\n          </tr>\n          <tr>\n            {productsIndexed.map(e =>\n              <td>\n                <Button size={'medium'}>\n                  Buy {e.index}\n                </Button>\n              </td>\n            )}\n          </tr>\n        </tbody>\n      </Table>\n\n      <Flex justifyContent='center'>\n        <Box>\n          <Form onSubmit={handleSubmitBuyItem}>\n            <Input type=\"text\" placeholder=\"Enter product id\" value={inputId} onChange={handleInputId} required={true} />\n            <Input type=\"text\" placeholder=\"Enter amount in ETH\" value={inputAmount} onChange={handleInputAmount} required={true} />\n            <Input type=\"submit\" value=\"Buy product\" />\n          </Form>\n        </Box>\n      </Flex>\n\n    </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}