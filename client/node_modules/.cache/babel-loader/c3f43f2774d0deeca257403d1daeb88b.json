{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport QRCode from 'qrcode.react';\nvar QR = React.forwardRef(function (props, ref) {\n  return React.createElement(QRCode, _extends({\n    ref: ref\n  }, props));\n});\nQR.propTypes = {\n  /**\n   * Sets the value of the QR code\n   */\n  value: PropTypes.string.isRequired,\n\n  /**\n   * Changes the element that contains the QR code\n   */\n  renderAs: PropTypes.oneOf(['canvas', 'svg']),\n\n  /**\n   * Sets the height and width in pixels\n   */\n  size: PropTypes.number,\n\n  /**\n   * Sets the background color\n   */\n  bgColor: PropTypes.string,\n\n  /**\n   * Sets the foreground color\n   */\n  fgColor: PropTypes.string,\n\n  /**\n   * Sets the amount of error correction\n   */\n  level: PropTypes.oneOf(['L', 'M', 'Q', 'H']),\n\n  /**\n   * Adds margin around the QR code\n   */\n  includeMargin: PropTypes.bool\n};\nQR.defaultProps = {\n  renderAs: 'svg',\n  size: 128,\n  bgColor: '#FFFFFF',\n  fgColor: '#000000',\n  level: 'L',\n  includeMargin: false\n};\nQR.displayName = 'QR';\nexport default QR;","map":{"version":3,"sources":["/home/gerwin/code/gerwinf/simple-marketplace/client/node_modules/rimble-ui/dist/es/QR/index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","Component","PropTypes","QRCode","QR","forwardRef","props","ref","createElement","propTypes","value","string","isRequired","renderAs","oneOf","size","number","bgColor","fgColor","level","includeMargin","bool","defaultProps","displayName"],"mappings":"AAAA,SAASA,QAAT,GAAoB;AAAEA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,UAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,WAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,YAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,UAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,WAAOL,MAAP;AAAgB,GAA5P;;AAA8P,SAAOH,QAAQ,CAACY,KAAT,CAAe,IAAf,EAAqBP,SAArB,CAAP;AAAyC;;AAE7T,OAAOQ,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,IAAIC,EAAE,GAAGJ,KAAK,CAACK,UAAN,CAAiB,UAAUC,KAAV,EAAiBC,GAAjB,EAAsB;AAC9C,SAAOP,KAAK,CAACQ,aAAN,CAAoBL,MAApB,EAA4BhB,QAAQ,CAAC;AAC1CoB,IAAAA,GAAG,EAAEA;AADqC,GAAD,EAExCD,KAFwC,CAApC,CAAP;AAGD,CAJQ,CAAT;AAKAF,EAAE,CAACK,SAAH,GAAe;AACb;AACF;AACA;AACEC,EAAAA,KAAK,EAAER,SAAS,CAACS,MAAV,CAAiBC,UAJX;;AAMb;AACF;AACA;AACEC,EAAAA,QAAQ,EAAEX,SAAS,CAACY,KAAV,CAAgB,CAAC,QAAD,EAAW,KAAX,CAAhB,CATG;;AAWb;AACF;AACA;AACEC,EAAAA,IAAI,EAAEb,SAAS,CAACc,MAdH;;AAgBb;AACF;AACA;AACEC,EAAAA,OAAO,EAAEf,SAAS,CAACS,MAnBN;;AAqBb;AACF;AACA;AACEO,EAAAA,OAAO,EAAEhB,SAAS,CAACS,MAxBN;;AA0Bb;AACF;AACA;AACEQ,EAAAA,KAAK,EAAEjB,SAAS,CAACY,KAAV,CAAgB,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAAhB,CA7BM;;AA+Bb;AACF;AACA;AACEM,EAAAA,aAAa,EAAElB,SAAS,CAACmB;AAlCZ,CAAf;AAoCAjB,EAAE,CAACkB,YAAH,GAAkB;AAChBT,EAAAA,QAAQ,EAAE,KADM;AAEhBE,EAAAA,IAAI,EAAE,GAFU;AAGhBE,EAAAA,OAAO,EAAE,SAHO;AAIhBC,EAAAA,OAAO,EAAE,SAJO;AAKhBC,EAAAA,KAAK,EAAE,GALS;AAMhBC,EAAAA,aAAa,EAAE;AANC,CAAlB;AAQAhB,EAAE,CAACmB,WAAH,GAAiB,IAAjB;AACA,eAAenB,EAAf","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport QRCode from 'qrcode.react';\nvar QR = React.forwardRef(function (props, ref) {\n  return React.createElement(QRCode, _extends({\n    ref: ref\n  }, props));\n});\nQR.propTypes = {\n  /**\n   * Sets the value of the QR code\n   */\n  value: PropTypes.string.isRequired,\n\n  /**\n   * Changes the element that contains the QR code\n   */\n  renderAs: PropTypes.oneOf(['canvas', 'svg']),\n\n  /**\n   * Sets the height and width in pixels\n   */\n  size: PropTypes.number,\n\n  /**\n   * Sets the background color\n   */\n  bgColor: PropTypes.string,\n\n  /**\n   * Sets the foreground color\n   */\n  fgColor: PropTypes.string,\n\n  /**\n   * Sets the amount of error correction\n   */\n  level: PropTypes.oneOf(['L', 'M', 'Q', 'H']),\n\n  /**\n   * Adds margin around the QR code\n   */\n  includeMargin: PropTypes.bool\n};\nQR.defaultProps = {\n  renderAs: 'svg',\n  size: 128,\n  bgColor: '#FFFFFF',\n  fgColor: '#000000',\n  level: 'L',\n  includeMargin: false\n};\nQR.displayName = 'QR';\nexport default QR;"]},"metadata":{},"sourceType":"module"}