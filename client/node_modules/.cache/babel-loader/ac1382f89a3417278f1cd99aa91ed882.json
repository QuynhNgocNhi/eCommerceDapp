{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/gerwin/code/gerwinf/blockchain-bootcamp/supply-chain-deployed/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Box, Form, Input, Select, Field, Button, Text, Checkbox, Radio, Flex, Card, Icon, MetaMaskButton, Image, Heading } from \"rimble-ui\"; // import { useWeb3Context } from 'web3-react'\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Web3 from \"web3\";\nimport getWeb3 from \"./getWeb3\";\nimport MarketplaceContract from \"./contracts/Marketplace.json\";\nimport { SupplyChain } from \"./abi/abi.js\"; // const web3 = new Web3(Web3.givenProvider);\n// const contractAddress = \"0xA05De8c36234Fb74a0FD6f216a3568dbBe5400Eb\";\n// const scContract = new web3.eth.Contract(SupplyChain, contractAddress);\n\nfunction App() {\n  _s();\n\n  // const [state, setstate] = useState(initialState)\n  const [count, setCount] = useState(0);\n  const [product, setProduct] = useState(\"Item...\");\n  const [lastProductsNames, setlastProductsNames] = useState([]);\n  const [inputName, setInputName] = useState(\"\");\n  const [web3, setWeb3] = useState(undefined);\n  const [contractMarketplace, setContractMarketplace] = useState(\"\");\n  const [account, setAccounts] = useState([]);\n  const [myArray, updateMyArray] = useState([]); // Comment option 1 or 2, then set corresponding address\n\n  useEffect(() => {\n    const init = async () => {\n      try {\n        // Option 1\n        // Get network provider and web3 instance.\n        const web3 = await getWeb3(); // Use web3 to get the user's accounts.\n\n        const accounts = await web3.eth.getAccounts(); // Get the Marketplace contract instance.\n\n        const networkId = await web3.eth.net.getId();\n        const deployedNetwork = MarketplaceContract.networks[networkId];\n        const instanceMarketplace = new web3.eth.Contract(MarketplaceContract.abi, deployedNetwork && deployedNetwork.address); // Option 2\n        // Get the deployed Supply Chain contract\n\n        /* const web3 = new Web3(Web3.givenProvider);\n        const contractAddress = \"0xA05De8c36234Fb74a0FD6f216a3568dbBe5400Eb\";\n        const scContract = new web3.eth.Contract(SupplyChain, contractAddress);\n         const accounts = await web3.eth.getAccounts(); */\n        // Set web3, accounts, and contract to the state, and then proceed with an\n        // example of interacting with the contract's methods.\n        // Init state\n\n        const count = await instanceMarketplace.methods.getCount().call(); // const product = await instanceMarketplace.methods.fetchItem(count - 1).call();\n\n        setWeb3(web3);\n        setAccounts(accounts);\n        setContractMarketplace(instanceMarketplace\n        /* scContract */\n        );\n        setCount(count);\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(`Failed to load web3, accounts, or contract. Check console for details.`);\n        console.error(error);\n      }\n    };\n\n    init();\n  }, []);\n\n  const addItem = async t => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const contract = contractMarketplace;\n    const productsObj = {\n      iPhone: 55,\n      Tablet: 24,\n      Mouse: 9,\n      Monitor: 30\n    }; // Convert to hooks\n\n    const productName = Object.keys(productsObj)[Math.floor(Math.random() * Object.keys(productsObj).length)];\n    const productPrice = productsObj[productName];\n    await contract.methods.addItem(productName, productPrice).send({\n      from: account\n    });\n    console.log(productName, productPrice); // Alternative with gas estimate\n    // const gas = await contract.methods.addItem(productName, productPrice).estimateGas();\n    // const post = await contract.methods.addItem(productName, productPrice).send({\n    //   from: account,\n    //   gas,\n    // });\n  };\n\n  const getCount = async t => {\n    t.preventDefault();\n    const contract = contractMarketplace;\n    const post = await contract.methods.getCount().call();\n    setCount(post);\n  };\n\n  const getProduct = async t => {\n    t.preventDefault();\n    const contract = contractMarketplace; // const productNumber = await contract.methods.getCount().call();\n\n    const numItems = await contract.methods.getCount().call();\n    ;\n    const numShown = 5;\n\n    for (let i = numItems - 1; i > numItems - numShown; i--) {\n      const post = await contract.methods.fetchItem(i).call(); // const addedProductsNames = lastProductsNames.concat(post.name)\n\n      setlastProductsNames(arr => [...arr, post.name]);\n      console.log(lastProductsNames); // Not yet added to one array but individual arrays\n    } // setProduct(post.name);\n\n  };\n\n  const handleInput = e => {\n    setInputName(e.target.value);\n  };\n\n  const onClick = () => {\n    updateMyArray(arr => [...arr, `${arr.length}`]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"App-header\",\n      children: [\"Project Marketplace\", /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MetaMaskButton.Outline, {\n        size: 'medium',\n        children: \"Connect with MetaMask\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Smart Contract Tests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Contract: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \" Marketplace \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 20\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Connected account: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\" \", account, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 29\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Products online: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\" \", count, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 27\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(Form\n        /* onSubmit={this.handleSubmitAddItem.bind(this)} */\n        , {\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            placeholder: \"Enter product name\"\n            /* value={inputName} onChange={handleInput} */\n            ,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            placeholder: \"Enter price e.g. $150\"\n            /* value={this.state.inputProductPrice} onChange={this.handleInputPrice.bind(this)} */\n            ,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"submit\",\n            value: \"Add product\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addItem,\n      children: \" Add item \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getCount,\n      children: \" Count items \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getProduct,\n      children: \" Get name \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: lastProductsNames\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      onClick: onClick,\n      value: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: myArray.map(e => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: e\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this); // return (\n  // <div className=\"App\">\n  //   <header className=\"App-header\">\n  //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n  //     <p>\n  //       Edit <code>src/App.js</code> and save to reload.\n  //     </p>\n  //     <a\n  //       className=\"App-link\"\n  //       href=\"https://reactjs.org\"\n  //       target=\"_blank\"\n  //       rel=\"noopener noreferrer\"\n  //     >\n  //       Learn React\n  //     </a>\n  //   </header>\n  // </div>\n  // );\n}\n\n_s(App, \"gwiYlZQkEABMgTds/efc5i5sjiA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/gerwin/code/gerwinf/blockchain-bootcamp/supply-chain-deployed/client/src/App.js"],"names":["React","useState","useEffect","Box","Form","Input","Select","Field","Button","Text","Checkbox","Radio","Flex","Card","Icon","MetaMaskButton","Image","Heading","Web3","getWeb3","MarketplaceContract","SupplyChain","App","count","setCount","product","setProduct","lastProductsNames","setlastProductsNames","inputName","setInputName","web3","setWeb3","undefined","contractMarketplace","setContractMarketplace","account","setAccounts","myArray","updateMyArray","init","accounts","eth","getAccounts","networkId","net","getId","deployedNetwork","networks","instanceMarketplace","Contract","abi","address","methods","getCount","call","error","alert","console","addItem","t","preventDefault","window","ethereum","enable","contract","productsObj","iPhone","Tablet","Mouse","Monitor","productName","Object","keys","Math","floor","random","length","productPrice","send","from","log","post","getProduct","numItems","numShown","i","fetchItem","arr","name","handleInput","e","target","value","onClick","map"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,KAApB,EAA2BC,MAA3B,EAAmCC,KAAnC,EAA0CC,MAA1C,EAAkDC,IAAlD,EAAwDC,QAAxD,EAAkEC,KAAlE,EAAyEC,IAAzE,EAA+EC,IAA/E,EAAqFC,IAArF,EAA2FC,cAA3F,EAA2GC,KAA3G,EAAkHC,OAAlH,QAAiI,WAAjI,C,CACA;;;AAEA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,mBAAP,MAAgC,8BAAhC;AACA,SAASC,WAAT,QAA4B,cAA5B,C,CAEA;AACA;AACA;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBvB,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACwB,OAAD,EAAUC,UAAV,IAAwBzB,QAAQ,CAAC,SAAD,CAAtC;AACA,QAAM,CAAC0B,iBAAD,EAAoBC,oBAApB,IAA4C3B,QAAQ,CAAC,EAAD,CAA1D;AACA,QAAM,CAAC4B,SAAD,EAAYC,YAAZ,IAA4B7B,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAM,CAAC8B,IAAD,EAAOC,OAAP,IAAkB/B,QAAQ,CAACgC,SAAD,CAAhC;AACA,QAAM,CAACC,mBAAD,EAAsBC,sBAAtB,IAAgDlC,QAAQ,CAAC,EAAD,CAA9D;AACA,QAAM,CAACmC,OAAD,EAAUC,WAAV,IAAyBpC,QAAQ,CAAC,EAAD,CAAvC;AAEA,QAAM,CAACqC,OAAD,EAAUC,aAAV,IAA2BtC,QAAQ,CAAC,EAAD,CAAzC,CAXa,CAcb;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMsC,IAAI,GAAG,YAAY;AACvB,UAAI;AACF;AACA;AACA,cAAMT,IAAI,GAAG,MAAMZ,OAAO,EAA1B,CAHE,CAKF;;AACA,cAAMsB,QAAQ,GAAG,MAAMV,IAAI,CAACW,GAAL,CAASC,WAAT,EAAvB,CANE,CAQF;;AACA,cAAMC,SAAS,GAAG,MAAMb,IAAI,CAACW,GAAL,CAASG,GAAT,CAAaC,KAAb,EAAxB;AACA,cAAMC,eAAe,GAAG3B,mBAAmB,CAAC4B,QAApB,CAA6BJ,SAA7B,CAAxB;AACA,cAAMK,mBAAmB,GAAG,IAAIlB,IAAI,CAACW,GAAL,CAASQ,QAAb,CAC1B9B,mBAAmB,CAAC+B,GADM,EAE1BJ,eAAe,IAAIA,eAAe,CAACK,OAFT,CAA5B,CAXE,CAgBF;AACA;;AACA;AACR;AACA;AACA;AAGQ;AACA;AAEA;;AAEA,cAAM7B,KAAK,GAAG,MAAM0B,mBAAmB,CAACI,OAApB,CAA4BC,QAA5B,GAAuCC,IAAvC,EAApB,CA7BE,CA8BF;;AAEAvB,QAAAA,OAAO,CAACD,IAAD,CAAP;AACAM,QAAAA,WAAW,CAACI,QAAD,CAAX;AACAN,QAAAA,sBAAsB,CAACc;AAAoB;AAArB,SAAtB;AACAzB,QAAAA,QAAQ,CAACD,KAAD,CAAR;AAED,OArCD,CAqCE,OAAOiC,KAAP,EAAc;AACd;AACAC,QAAAA,KAAK,CACF,wEADE,CAAL;AAGAC,QAAAA,OAAO,CAACF,KAAR,CAAcA,KAAd;AACD;AACF,KA7CD;;AA8CAhB,IAAAA,IAAI;AACL,GAhDQ,EAgDN,EAhDM,CAAT;;AAmDA,QAAMmB,OAAO,GAAG,MAAOC,CAAP,IAAa;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMpB,QAAQ,GAAG,MAAMqB,MAAM,CAACC,QAAP,CAAgBC,MAAhB,EAAvB;AACA,UAAM5B,OAAO,GAAGK,QAAQ,CAAC,CAAD,CAAxB;AACA,UAAMwB,QAAQ,GAAG/B,mBAAjB;AAEA,UAAMgC,WAAW,GAAG;AAClBC,MAAAA,MAAM,EAAE,EADU;AAElBC,MAAAA,MAAM,EAAE,EAFU;AAGlBC,MAAAA,KAAK,EAAE,CAHW;AAIlBC,MAAAA,OAAO,EAAE;AAJS,KAApB,CAN2B,CAa3B;;AACA,UAAMC,WAAW,GAAGC,MAAM,CAACC,IAAP,CAAYP,WAAZ,EAAyBQ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,MAAM,CAACC,IAAP,CAAYP,WAAZ,EAAyBW,MAApD,CAAzB,CAApB;AACA,UAAMC,YAAY,GAAGZ,WAAW,CAACK,WAAD,CAAhC;AAEA,UAAMN,QAAQ,CAACZ,OAAT,CAAiBM,OAAjB,CAAyBY,WAAzB,EAAsCO,YAAtC,EAAoDC,IAApD,CAAyD;AAACC,MAAAA,IAAI,EAAE5C;AAAP,KAAzD,CAAN;AACAsB,IAAAA,OAAO,CAACuB,GAAR,CAAYV,WAAZ,EAAyBO,YAAzB,EAlB2B,CAmB3B;AACA;AACA;AACA;AACA;AACA;AACD,GAzBD;;AA2BA,QAAMxB,QAAQ,GAAG,MAAOM,CAAP,IAAa;AAC5BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMI,QAAQ,GAAG/B,mBAAjB;AACA,UAAMgD,IAAI,GAAG,MAAMjB,QAAQ,CAACZ,OAAT,CAAiBC,QAAjB,GAA4BC,IAA5B,EAAnB;AACA/B,IAAAA,QAAQ,CAAC0D,IAAD,CAAR;AACD,GALD;;AAOA,QAAMC,UAAU,GAAG,MAAOvB,CAAP,IAAa;AAC9BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMI,QAAQ,GAAG/B,mBAAjB,CAF8B,CAG9B;;AACA,UAAMkD,QAAQ,GAAG,MAAMnB,QAAQ,CAACZ,OAAT,CAAiBC,QAAjB,GAA4BC,IAA5B,EAAvB;AAA0D;AAC1D,UAAM8B,QAAQ,GAAG,CAAjB;;AAEA,SAAK,IAAIC,CAAC,GAAGF,QAAQ,GAAG,CAAxB,EAA2BE,CAAC,GAAGF,QAAQ,GAAGC,QAA1C,EAAoDC,CAAC,EAArD,EAAyD;AACvD,YAAMJ,IAAI,GAAG,MAAMjB,QAAQ,CAACZ,OAAT,CAAiBkC,SAAjB,CAA2BD,CAA3B,EAA8B/B,IAA9B,EAAnB,CADuD,CAEvD;;AACA3B,MAAAA,oBAAoB,CAAE4D,GAAG,IAAI,CAAC,GAAGA,GAAJ,EAASN,IAAI,CAACO,IAAd,CAAT,CAApB;AACA/B,MAAAA,OAAO,CAACuB,GAAR,CAAYtD,iBAAZ,EAJuD,CAKvD;AACD,KAb6B,CAe9B;;AACD,GAhBD;;AAkBA,QAAM+D,WAAW,GAAGC,CAAC,IAAI;AACvB7D,IAAAA,YAAY,CAAC6D,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AACD,GAFD;;AAIA,QAAMC,OAAO,GAAG,MAAM;AACpBvD,IAAAA,aAAa,CAACiD,GAAG,IAAI,CAAC,GAAGA,GAAJ,EAAU,GAAEA,GAAG,CAACX,MAAO,EAAvB,CAAR,CAAb;AACD,GAFD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA,qDACE;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,cAAD,CAAgB,OAAhB;AAAwB,QAAA,IAAI,EAAE,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAQE;AAAA,4CAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,eASE;AAAA,qDAAsB;AAAA,wBAAUzC,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,eAUE;AAAA,mDAAoB;AAAA,wBAAUb,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,eAYE,QAAC,IAAD;AAAM,MAAA,cAAc,EAAC,QAArB;AAAA,6BACE,QAAC,GAAD;AAAA,+BACE,QAAC;AAAK;AAAN;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,WAAW,EAAC;AAAqB;AAApD;AAAmG,YAAA,QAAQ,EAAE;AAA7G;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,WAAW,EAAC;AAAwB;AAAvD;AAA8I,YAAA,QAAQ,EAAE;AAAxJ;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,QAAZ;AAAqB,YAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAZF,eAsBE;AAAQ,MAAA,OAAO,EAAEoC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBF,eAwBE;AAAQ,MAAA,OAAO,EAAEL,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAxBF,eA0BE;AAAA,gBAAM/B;AAAN;AAAA;AAAA;AAAA;AAAA,YA1BF,eA4BE;AAAQ,MAAA,OAAO,EAAE4D,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA5BF,eA8BE;AAAA,gBAAMxD;AAAN;AAAA;AAAA;AAAA;AAAA,YA9BF,eAgCE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,OAAO,EAAEmE,OAA9B;AAAuC,MAAA,KAAK,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,YAhCF,eAkCE;AAAA,gBAAMxD,OAAO,CAACyD,GAAR,CAAYJ,CAAC,iBACjB;AAAA,kBAAMA;AAAN;AAAA;AAAA;AAAA;AAAA,cADI;AAAN;AAAA;AAAA;AAAA;AAAA,YAlCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CA/Ha,CA2Kb;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACF;AACD;;GA7LQrE,G;;KAAAA,G;AA+LT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Box, Form, Input, Select, Field, Button, Text, Checkbox, Radio, Flex, Card, Icon, MetaMaskButton, Image, Heading } from \"rimble-ui\";\n// import { useWeb3Context } from 'web3-react'\nimport logo from './logo.svg';\nimport './App.css';\nimport Web3 from \"web3\";\nimport getWeb3 from \"./getWeb3\";\nimport MarketplaceContract from \"./contracts/Marketplace.json\";\nimport { SupplyChain } from \"./abi/abi.js\";\n\n// const web3 = new Web3(Web3.givenProvider);\n// const contractAddress = \"0xA05De8c36234Fb74a0FD6f216a3568dbBe5400Eb\";\n// const scContract = new web3.eth.Contract(SupplyChain, contractAddress);\n\nfunction App() {\n  // const [state, setstate] = useState(initialState)\n  const [count, setCount] = useState(0);\n  const [product, setProduct] = useState(\"Item...\");\n  const [lastProductsNames, setlastProductsNames] = useState([]);\n  const [inputName, setInputName] = useState(\"\");\n\n  const [web3, setWeb3] = useState(undefined);\n  const [contractMarketplace, setContractMarketplace] = useState(\"\");\n  const [account, setAccounts] = useState([]);\n\n  const [myArray, updateMyArray] = useState([]);\n\n\n  // Comment option 1 or 2, then set corresponding address\n  useEffect(() => {\n    const init = async () => {\n      try {\n        // Option 1\n        // Get network provider and web3 instance.\n        const web3 = await getWeb3();\n\n        // Use web3 to get the user's accounts.\n        const accounts = await web3.eth.getAccounts();\n\n        // Get the Marketplace contract instance.\n        const networkId = await web3.eth.net.getId();\n        const deployedNetwork = MarketplaceContract.networks[networkId];\n        const instanceMarketplace = new web3.eth.Contract(\n          MarketplaceContract.abi,\n          deployedNetwork && deployedNetwork.address,\n        );\n\n        // Option 2\n        // Get the deployed Supply Chain contract\n        /* const web3 = new Web3(Web3.givenProvider);\n        const contractAddress = \"0xA05De8c36234Fb74a0FD6f216a3568dbBe5400Eb\";\n        const scContract = new web3.eth.Contract(SupplyChain, contractAddress);\n\n        const accounts = await web3.eth.getAccounts(); */\n\n        // Set web3, accounts, and contract to the state, and then proceed with an\n        // example of interacting with the contract's methods.\n\n        // Init state\n\n        const count = await instanceMarketplace.methods.getCount().call();\n        // const product = await instanceMarketplace.methods.fetchItem(count - 1).call();\n\n        setWeb3(web3);\n        setAccounts(accounts);\n        setContractMarketplace(instanceMarketplace /* scContract */);\n        setCount(count);\n\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(\n          `Failed to load web3, accounts, or contract. Check console for details.`,\n        );\n        console.error(error);\n      }\n    }\n    init();\n  }, []);\n\n\n  const addItem = async (t) => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const contract = contractMarketplace;\n\n    const productsObj = {\n      iPhone: 55,\n      Tablet: 24,\n      Mouse: 9,\n      Monitor: 30\n    }\n\n    // Convert to hooks\n    const productName = Object.keys(productsObj)[Math.floor(Math.random() * Object.keys(productsObj).length)];\n    const productPrice = productsObj[productName];\n\n    await contract.methods.addItem(productName, productPrice).send({from: account});\n    console.log(productName, productPrice)\n    // Alternative with gas estimate\n    // const gas = await contract.methods.addItem(productName, productPrice).estimateGas();\n    // const post = await contract.methods.addItem(productName, productPrice).send({\n    //   from: account,\n    //   gas,\n    // });\n  };\n\n  const getCount = async (t) => {\n    t.preventDefault();\n    const contract = contractMarketplace;\n    const post = await contract.methods.getCount().call();\n    setCount(post);\n  }\n\n  const getProduct = async (t) => {\n    t.preventDefault();\n    const contract = contractMarketplace;\n    // const productNumber = await contract.methods.getCount().call();\n    const numItems = await contract.methods.getCount().call();;\n    const numShown = 5;\n\n    for (let i = numItems - 1; i > numItems - numShown; i--) {\n      const post = await contract.methods.fetchItem(i).call()\n      // const addedProductsNames = lastProductsNames.concat(post.name)\n      setlastProductsNames((arr => [...arr, post.name]));\n      console.log(lastProductsNames)\n      // Not yet added to one array but individual arrays\n    }\n\n    // setProduct(post.name);\n  }\n\n  const handleInput = e => {\n    setInputName(e.target.value);\n  };\n\n  const onClick = () => {\n    updateMyArray(arr => [...arr, `${arr.length}`]);\n  };\n\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"App-header\">Project Marketplace\n        <p></p>\n        <MetaMaskButton.Outline size={'medium'}>Connect with MetaMask</MetaMaskButton.Outline>\n      </h1>\n\n      <h2>Smart Contract Tests</h2>\n\n      <p>Contract: <strong> Marketplace </strong> </p>\n      <p>Connected account: <strong> {account} </strong> </p>\n      <p>Products online: <strong> {count} </strong> </p>\n\n      <Flex justifyContent='center'>\n        <Box>\n          <Form /* onSubmit={this.handleSubmitAddItem.bind(this)} */>\n            <Input type=\"text\" placeholder=\"Enter product name\" /* value={inputName} onChange={handleInput} */ required={true} />\n            <Input type=\"text\" placeholder=\"Enter price e.g. $150\" /* value={this.state.inputProductPrice} onChange={this.handleInputPrice.bind(this)} */ required={true} />\n            <Input type=\"submit\" value=\"Add product\" />\n          </Form>\n        </Box>\n      </Flex>\n\n      <button onClick={addItem}> Add item </button>\n\n      <button onClick={getCount}> Count items </button>\n\n      <div>{count}</div>\n\n      <button onClick={getProduct}> Get name </button>\n\n      <div>{lastProductsNames}</div>\n\n      <input type=\"button\" onClick={onClick} value=\"Update\" />\n\n      <div>{myArray.map(e =>\n        <div>{e}</div>\n      )}\n      </div>\n\n\n\n    </div>\n    );\n  // return (\n    // <div className=\"App\">\n    //   <header className=\"App-header\">\n    //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    //     <p>\n    //       Edit <code>src/App.js</code> and save to reload.\n    //     </p>\n    //     <a\n    //       className=\"App-link\"\n    //       href=\"https://reactjs.org\"\n    //       target=\"_blank\"\n    //       rel=\"noopener noreferrer\"\n    //     >\n    //       Learn React\n    //     </a>\n    //   </header>\n    // </div>\n  // );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}