{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from \"react\";\nimport styled from \"styled-components\";\nimport { space, color } from \"styled-system\";\nvar Svg = styled(\"svg\")({\n  flex: \"none\"\n}, space, color);\nvar SvgElix = React.forwardRef(function (props, ref) {\n  return React.createElement(Svg, _extends({}, props, {\n    viewBox: \"0 0 24 24\",\n    fill: \"currentcolor\",\n    height: props.size,\n    width: props.size,\n    ref: ref\n  }), React.createElement(\"path\", {\n    d: \"M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z\",\n    fill: \"inherit\"\n  }), React.createElement(\"path\", {\n    d: \"M7.573 17.702l.002-.003 2.39-5.712-2.392-5.711 4.414 5.711-4.41 5.711-.004.004zm8.832 0l-.003-.004-4.41-5.71 4.413-5.712-2.392 5.711 2.39 5.712.002.003z\",\n    fill: \"white\"\n  }), React.createElement(\"path\", {\n    d: \"M11.989 11.988v3.98L7.57 17.7l4.418-5.715v-3.98l4.417-1.732-4.417 5.715z\",\n    fill: \"white\",\n    fillOpacity: 0.8\n  }), React.createElement(\"path\", {\n    d: \"M11.989 15.967v3.489L7.57 17.698l4.418-1.737v-3.973L7.57 6.273l4.418 1.732V4.517l4.417 1.757-4.417 1.737v3.974l4.417 5.715-4.417-1.732z\",\n    fill: \"white\",\n    fillOpacity: 0.5\n  }), React.createElement(\"path\", {\n    d: \"M7.571 6.274l4.418-1.757v3.494L7.57 6.274zm8.835 11.424l-4.417 1.758V15.96l4.417 1.737z\",\n    fill: \"white\",\n    fillOpacity: 0.145\n  }));\n});\nSvgElix.displayName = \"SvgElix\";\nSvgElix.defaultProps = {\n  size: 24,\n  color: \"#00ADED\"\n};\nexport default SvgElix;","map":{"version":3,"sources":["/home/gerwin/code/gerwinf/simple-marketplace/client/node_modules/@rimble/icons/es/tokens/Elix.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","styled","space","color","Svg","flex","SvgElix","forwardRef","props","ref","createElement","viewBox","fill","height","size","width","d","fillOpacity","displayName","defaultProps"],"mappings":"AAAA,SAASA,QAAT,GAAoB;AAAEA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,UAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,WAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,YAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,UAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,WAAOL,MAAP;AAAgB,GAA5P;;AAA8P,SAAOH,QAAQ,CAACY,KAAT,CAAe,IAAf,EAAqBP,SAArB,CAAP;AAAyC;;AAE7T,OAAO,KAAKQ,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,KAAT,EAAgBC,KAAhB,QAA6B,eAA7B;AACA,IAAIC,GAAG,GAAGH,MAAM,CAAC,KAAD,CAAN,CAAc;AACtBI,EAAAA,IAAI,EAAE;AADgB,CAAd,EAEPH,KAFO,EAEAC,KAFA,CAAV;AAGA,IAAIG,OAAO,GAAGN,KAAK,CAACO,UAAN,CAAiB,UAAUC,KAAV,EAAiBC,GAAjB,EAAsB;AACnD,SAAOT,KAAK,CAACU,aAAN,CAAoBN,GAApB,EAAyBjB,QAAQ,CAAC,EAAD,EAAKqB,KAAL,EAAY;AAClDG,IAAAA,OAAO,EAAE,WADyC;AAElDC,IAAAA,IAAI,EAAE,cAF4C;AAGlDC,IAAAA,MAAM,EAAEL,KAAK,CAACM,IAHoC;AAIlDC,IAAAA,KAAK,EAAEP,KAAK,CAACM,IAJqC;AAKlDL,IAAAA,GAAG,EAAEA;AAL6C,GAAZ,CAAjC,EAMHT,KAAK,CAACU,aAAN,CAAoB,MAApB,EAA4B;AAC9BM,IAAAA,CAAC,EAAE,0EAD2B;AAE9BJ,IAAAA,IAAI,EAAE;AAFwB,GAA5B,CANG,EASHZ,KAAK,CAACU,aAAN,CAAoB,MAApB,EAA4B;AAC9BM,IAAAA,CAAC,EAAE,0JAD2B;AAE9BJ,IAAAA,IAAI,EAAE;AAFwB,GAA5B,CATG,EAYHZ,KAAK,CAACU,aAAN,CAAoB,MAApB,EAA4B;AAC9BM,IAAAA,CAAC,EAAE,0EAD2B;AAE9BJ,IAAAA,IAAI,EAAE,OAFwB;AAG9BK,IAAAA,WAAW,EAAE;AAHiB,GAA5B,CAZG,EAgBHjB,KAAK,CAACU,aAAN,CAAoB,MAApB,EAA4B;AAC9BM,IAAAA,CAAC,EAAE,yIAD2B;AAE9BJ,IAAAA,IAAI,EAAE,OAFwB;AAG9BK,IAAAA,WAAW,EAAE;AAHiB,GAA5B,CAhBG,EAoBHjB,KAAK,CAACU,aAAN,CAAoB,MAApB,EAA4B;AAC9BM,IAAAA,CAAC,EAAE,yFAD2B;AAE9BJ,IAAAA,IAAI,EAAE,OAFwB;AAG9BK,IAAAA,WAAW,EAAE;AAHiB,GAA5B,CApBG,CAAP;AAyBD,CA1Ba,CAAd;AA2BAX,OAAO,CAACY,WAAR,GAAsB,SAAtB;AACAZ,OAAO,CAACa,YAAR,GAAuB;AACrBL,EAAAA,IAAI,EAAE,EADe;AAErBX,EAAAA,KAAK,EAAE;AAFc,CAAvB;AAIA,eAAeG,OAAf","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\nimport styled from \"styled-components\";\nimport { space, color } from \"styled-system\";\nvar Svg = styled(\"svg\")({\n  flex: \"none\"\n}, space, color);\nvar SvgElix = React.forwardRef(function (props, ref) {\n  return React.createElement(Svg, _extends({}, props, {\n    viewBox: \"0 0 24 24\",\n    fill: \"currentcolor\",\n    height: props.size,\n    width: props.size,\n    ref: ref\n  }), React.createElement(\"path\", {\n    d: \"M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z\",\n    fill: \"inherit\"\n  }), React.createElement(\"path\", {\n    d: \"M7.573 17.702l.002-.003 2.39-5.712-2.392-5.711 4.414 5.711-4.41 5.711-.004.004zm8.832 0l-.003-.004-4.41-5.71 4.413-5.712-2.392 5.711 2.39 5.712.002.003z\",\n    fill: \"white\"\n  }), React.createElement(\"path\", {\n    d: \"M11.989 11.988v3.98L7.57 17.7l4.418-5.715v-3.98l4.417-1.732-4.417 5.715z\",\n    fill: \"white\",\n    fillOpacity: 0.8\n  }), React.createElement(\"path\", {\n    d: \"M11.989 15.967v3.489L7.57 17.698l4.418-1.737v-3.973L7.57 6.273l4.418 1.732V4.517l4.417 1.757-4.417 1.737v3.974l4.417 5.715-4.417-1.732z\",\n    fill: \"white\",\n    fillOpacity: 0.5\n  }), React.createElement(\"path\", {\n    d: \"M7.571 6.274l4.418-1.757v3.494L7.57 6.274zm8.835 11.424l-4.417 1.758V15.96l4.417 1.737z\",\n    fill: \"white\",\n    fillOpacity: 0.145\n  }));\n});\nSvgElix.displayName = \"SvgElix\";\nSvgElix.defaultProps = {\n  size: 24,\n  color: \"#00ADED\"\n};\nexport default SvgElix;"]},"metadata":{},"sourceType":"module"}