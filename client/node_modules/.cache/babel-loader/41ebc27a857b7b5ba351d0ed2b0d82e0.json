{"ast":null,"code":"(function (self) {\n  'use strict';\n\n  if (self.fetch) {\n    return;\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && function () {\n      try {\n        new Blob();\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  if (support.arrayBuffer) {\n    var viewClasses = ['[object Int8Array]', '[object Uint8Array]', '[object Uint8ClampedArray]', '[object Int16Array]', '[object Uint16Array]', '[object Int32Array]', '[object Uint32Array]', '[object Float32Array]', '[object Float64Array]'];\n\n    var isDataView = function (obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj);\n    };\n\n    var isArrayBufferView = ArrayBuffer.isView || function (obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1;\n    };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name');\n    }\n\n    return name.toLowerCase();\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n\n    return value;\n  } // Build a destructive iterator for the value list\n\n\n  function iteratorFor(items) {\n    var iterator = {\n      next: function () {\n        var value = items.shift();\n        return {\n          done: value === undefined,\n          value: value\n        };\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function () {\n        return iterator;\n      };\n    }\n\n    return iterator;\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function (value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function (header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function (name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function (name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ',' + value : value;\n  };\n\n  Headers.prototype['delete'] = function (name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function (name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null;\n  };\n\n  Headers.prototype.has = function (name) {\n    return this.map.hasOwnProperty(normalizeName(name));\n  };\n\n  Headers.prototype.set = function (name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function (callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function () {\n    var items = [];\n    this.forEach(function (value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items);\n  };\n\n  Headers.prototype.values = function () {\n    var items = [];\n    this.forEach(function (value) {\n      items.push(value);\n    });\n    return iteratorFor(items);\n  };\n\n  Headers.prototype.entries = function () {\n    var items = [];\n    this.forEach(function (value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items);\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'));\n    }\n\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function (resolve, reject) {\n      reader.onload = function () {\n        resolve(reader.result);\n      };\n\n      reader.onerror = function () {\n        reject(reader.error);\n      };\n    });\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise;\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise;\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n\n    return chars.join('');\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0);\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer;\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function (body) {\n      this._bodyInit = body;\n\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer); // IE 10-11 can't handle a DataView body.\n\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        throw new Error('unsupported BodyInit type');\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function () {\n        var rejected = consumed(this);\n\n        if (rejected) {\n          return rejected;\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob);\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]));\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob');\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]));\n        }\n      };\n\n      this.arrayBuffer = function () {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer);\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer);\n        }\n      };\n    }\n\n    this.text = function () {\n      var rejected = consumed(this);\n\n      if (rejected) {\n        return rejected;\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob);\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer));\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text');\n      } else {\n        return Promise.resolve(this._bodyText);\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function () {\n        return this.text().then(decode);\n      };\n    }\n\n    this.json = function () {\n      return this.text().then(JSON.parse);\n    };\n\n    return this;\n  } // HTTP methods whose capitalization should be normalized\n\n\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method;\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read');\n      }\n\n      this.url = input.url;\n      this.credentials = input.credentials;\n\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n\n      this.method = input.method;\n      this.mode = input.mode;\n\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit';\n\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests');\n    }\n\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function () {\n    return new Request(this, {\n      body: this._bodyInit\n    });\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body.trim().split('&').forEach(function (bytes) {\n      if (bytes) {\n        var split = bytes.split('=');\n        var name = split.shift().replace(/\\+/g, ' ');\n        var value = split.join('=').replace(/\\+/g, ' ');\n        form.append(decodeURIComponent(name), decodeURIComponent(value));\n      }\n    });\n    return form;\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers(); // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function (line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers;\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function () {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    });\n  };\n\n  Response.error = function () {\n    var response = new Response(null, {\n      status: 0,\n      statusText: ''\n    });\n    response.type = 'error';\n    return response;\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function (url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code');\n    }\n\n    return new Response(null, {\n      status: status,\n      headers: {\n        location: url\n      }\n    });\n  };\n\n  self.Headers = Headers;\n  self.Request = Request;\n  self.Response = Response;\n\n  self.fetch = function (input, init) {\n    return new Promise(function (resolve, reject) {\n      var request = new Request(input, init);\n      var xhr = new XMLHttpRequest();\n\n      xhr.onload = function () {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function () {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function () {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function (value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    });\n  };\n\n  self.fetch.polyfill = true;\n})(typeof self !== 'undefined' ? self : this);","map":{"version":3,"sources":["/home/gerwin/code/gerwinf/simple-marketplace/node_modules/whatwg-fetch/fetch.js"],"names":["self","fetch","support","searchParams","iterable","Symbol","blob","Blob","e","formData","arrayBuffer","viewClasses","isDataView","obj","DataView","prototype","isPrototypeOf","isArrayBufferView","ArrayBuffer","isView","indexOf","Object","toString","call","normalizeName","name","String","test","TypeError","toLowerCase","normalizeValue","value","iteratorFor","items","iterator","next","shift","done","undefined","Headers","headers","map","forEach","append","Array","isArray","header","getOwnPropertyNames","oldValue","get","has","hasOwnProperty","set","callback","thisArg","keys","push","values","entries","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","result","onerror","error","readBlobAsArrayBuffer","FileReader","promise","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","buf","view","Uint8Array","chars","length","i","fromCharCode","join","bufferClone","slice","byteLength","buffer","Body","_initBody","_bodyInit","_bodyText","_bodyBlob","FormData","_bodyFormData","URLSearchParams","_bodyArrayBuffer","Error","type","rejected","then","text","decode","json","JSON","parse","methods","normalizeMethod","method","upcased","toUpperCase","Request","input","options","url","credentials","mode","referrer","clone","form","trim","split","bytes","replace","decodeURIComponent","parseHeaders","rawHeaders","preProcessedHeaders","line","parts","key","Response","bodyInit","status","ok","statusText","response","redirectStatuses","redirect","RangeError","location","init","request","xhr","XMLHttpRequest","getAllResponseHeaders","responseURL","responseText","ontimeout","open","withCredentials","responseType","setRequestHeader","send","polyfill"],"mappings":"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","sourcesContent":["(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ')\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = options.status === undefined ? 200 : options.status\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n"]},"metadata":{},"sourceType":"script"}