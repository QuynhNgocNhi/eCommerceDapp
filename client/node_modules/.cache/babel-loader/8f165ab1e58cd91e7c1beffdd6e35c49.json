{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/gerwin/code/gerwinf/blockchain-bootcamp/supply-chain-deployed/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Box, Form, Input, Select, Field, Button, Text, Checkbox, Radio, Flex, Card, Icon, MetaMaskButton, Image, Heading } from \"rimble-ui\"; // import { useWeb3Context } from 'web3-react'\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Web3 from \"web3\";\nimport getWeb3 from \"./getWeb3\";\nimport MarketplaceContract from \"./contracts/Marketplace.json\";\nimport { SupplyChain } from \"./abi/abi.js\";\nconst web3 = new Web3(Web3.givenProvider);\nconst contractAddress = \"0xA05De8c36234Fb74a0FD6f216a3568dbBe5400Eb\";\nconst scContract = new web3.eth.Contract(SupplyChain, contractAddress);\n\nfunction App() {\n  _s();\n\n  // const [state, setstate] = useState(initialState)\n  const [count, setGet] = useState(\"Count is...\");\n  const [product, setProduct] = useState(\"Item...\");\n  const [inputName, setInputName] = useState(\"\");\n  const [web3, setWeb3] = useState(undefined);\n  const [contractMarketplace, setContractMarketplace] = useState([]);\n  const [account, setAccounts] = useState([]);\n  useEffect(() => {\n    const init = async () => {\n      try {\n        // Get network provider and web3 instance.\n        const web3 = await getWeb3(); // Use web3 to get the user's accounts.\n\n        const accounts = await web3.eth.getAccounts(); // Get the Marketplace contract instance.\n\n        const networkId = await web3.eth.net.getId();\n        const deployedNetwork = MarketplaceContract.networks[networkId];\n        const instanceMarketplace = new web3.eth.Contract(MarketplaceContract.abi, deployedNetwork && deployedNetwork.address);\n        setWeb3(web3);\n        setAccounts(accounts);\n        setContractMarketplace(instanceMarketplace); // Set web3, accounts, and contract to the state, and then proceed with an\n        // example of interacting with the contract's methods.\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(`Failed to load web3, accounts, or contract. Check console for details.`);\n        console.error(error);\n      }\n    };\n\n    init();\n  }, []);\n\n  const addItem = async t => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0]; // Convert to hooks\n\n    const productName = \"Tablet\";\n    const productPrice = 42;\n    await scContract.methods.addItem(productName, productPrice).send({\n      from: account\n    });\n    const gas = await scContract.methods.addItem(productName, productPrice).estimateGas();\n    const post = await scContract.methods.addItem(productName, productPrice).send({\n      from: account,\n      gas\n    });\n  };\n\n  const getCount = async t => {\n    t.preventDefault();\n    const post = await scContract.methods.getCount().call();\n    setGet(post);\n  };\n\n  const getProduct = async t => {\n    t.preventDefault();\n    const productNumber = 0;\n    const post = await scContract.methods.fetchItem(productNumber).call();\n    setProduct(post.name);\n  };\n\n  const handleInput = e => {\n    setInputName(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"App-header\",\n      children: [\"Project Marketplace\", /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MetaMaskButton.Outline, {\n        size: 'medium',\n        children: \"Connect with MetaMask\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Smart Contract Tests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Contract: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\" \", contract, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 20\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Connected account: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\" \", account, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 29\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Products online: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\" \", count, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 27\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(Form\n        /* onSubmit={this.handleSubmitAddItem.bind(this)} */\n        , {\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            placeholder: \"Enter product name\"\n            /* value={inputName} onChange={handleInput} */\n            ,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            placeholder: \"Enter price e.g. $150\"\n            /* value={this.state.inputProductPrice} onChange={this.handleInputPrice.bind(this)} */\n            ,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"submit\",\n            value: \"Add product\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addItem,\n      children: \" Add item \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getCount,\n      children: \" Count items \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getProduct,\n      children: \" Get name \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: product\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this); // return (\n  // <div className=\"App\">\n  //   <header className=\"App-header\">\n  //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n  //     <p>\n  //       Edit <code>src/App.js</code> and save to reload.\n  //     </p>\n  //     <a\n  //       className=\"App-link\"\n  //       href=\"https://reactjs.org\"\n  //       target=\"_blank\"\n  //       rel=\"noopener noreferrer\"\n  //     >\n  //       Learn React\n  //     </a>\n  //   </header>\n  // </div>\n  // );\n}\n\n_s(App, \"TD2KjzIpJZGaC9a33TOF5d/ZVjs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/gerwin/code/gerwinf/blockchain-bootcamp/supply-chain-deployed/client/src/App.js"],"names":["React","useState","useEffect","Box","Form","Input","Select","Field","Button","Text","Checkbox","Radio","Flex","Card","Icon","MetaMaskButton","Image","Heading","Web3","getWeb3","MarketplaceContract","SupplyChain","web3","givenProvider","contractAddress","scContract","eth","Contract","App","count","setGet","product","setProduct","inputName","setInputName","setWeb3","undefined","contractMarketplace","setContractMarketplace","account","setAccounts","init","accounts","getAccounts","networkId","net","getId","deployedNetwork","networks","instanceMarketplace","abi","address","error","alert","console","addItem","t","preventDefault","window","ethereum","enable","productName","productPrice","methods","send","from","gas","estimateGas","post","getCount","call","getProduct","productNumber","fetchItem","name","handleInput","e","target","value","contract"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Box, Form, Input, Select, Field, Button, Text, Checkbox, Radio, Flex, Card, Icon, MetaMaskButton, Image, Heading } from \"rimble-ui\";\n// import { useWeb3Context } from 'web3-react'\nimport logo from './logo.svg';\nimport './App.css';\nimport Web3 from \"web3\";\nimport getWeb3 from \"./getWeb3\";\nimport MarketplaceContract from \"./contracts/Marketplace.json\";\nimport { SupplyChain } from \"./abi/abi.js\";\n\nconst web3 = new Web3(Web3.givenProvider);\nconst contractAddress = \"0xA05De8c36234Fb74a0FD6f216a3568dbBe5400Eb\";\nconst scContract = new web3.eth.Contract(SupplyChain, contractAddress);\n\nfunction App() {\n  // const [state, setstate] = useState(initialState)\n  const [count, setGet] = useState(\"Count is...\");\n  const [product, setProduct] = useState(\"Item...\");\n  const [inputName, setInputName] = useState(\"\");\n\n  const [web3, setWeb3] = useState(undefined);\n  const [contractMarketplace, setContractMarketplace] = useState([]);\n  const [account, setAccounts] = useState([]);\n\n  useEffect(() => {\n    const init = async () => {\n      try {\n        // Get network provider and web3 instance.\n        const web3 = await getWeb3();\n\n        // Use web3 to get the user's accounts.\n        const accounts = await web3.eth.getAccounts();\n\n        // Get the Marketplace contract instance.\n        const networkId = await web3.eth.net.getId();\n        const deployedNetwork = MarketplaceContract.networks[networkId];\n        const instanceMarketplace = new web3.eth.Contract(\n          MarketplaceContract.abi,\n          deployedNetwork && deployedNetwork.address,\n        );\n\n        setWeb3(web3);\n        setAccounts(accounts);\n        setContractMarketplace(instanceMarketplace);\n      // Set web3, accounts, and contract to the state, and then proceed with an\n      // example of interacting with the contract's methods.\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(\n          `Failed to load web3, accounts, or contract. Check console for details.`,\n        );\n        console.error(error);\n      }\n    }\n    init();\n  }, []);\n\n\n\n  const addItem = async (t) => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n\n    // Convert to hooks\n    const productName = \"Tablet\";\n    const productPrice = 42;\n\n    await scContract.methods.addItem(productName, productPrice).send({from: account});\n\n    const gas = await scContract.methods.addItem(productName, productPrice).estimateGas();\n    const post = await scContract.methods.addItem(productName, productPrice).send({\n      from: account,\n      gas,\n    });\n  };\n\n  const getCount = async (t) => {\n    t.preventDefault();\n    const post = await scContract.methods.getCount().call();\n    setGet(post);\n  }\n\n  const getProduct = async (t) => {\n    t.preventDefault();\n    const productNumber = 0;\n    const post = await scContract.methods.fetchItem(productNumber).call();\n    setProduct(post.name);\n  }\n\n  const handleInput = e => {\n    setInputName(e.target.value);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"App-header\">Project Marketplace\n        <p></p>\n        <MetaMaskButton.Outline size={'medium'}>Connect with MetaMask</MetaMaskButton.Outline>\n      </h1>\n\n      <h2>Smart Contract Tests</h2>\n\n      <p>Contract: <strong> {contract} </strong> </p>\n      <p>Connected account: <strong> {account} </strong> </p>\n      <p>Products online: <strong> {count} </strong> </p>\n\n      <Flex justifyContent='center'>\n        <Box>\n          <Form /* onSubmit={this.handleSubmitAddItem.bind(this)} */>\n            <Input type=\"text\" placeholder=\"Enter product name\" /* value={inputName} onChange={handleInput} */ required={true} />\n            <Input type=\"text\" placeholder=\"Enter price e.g. $150\" /* value={this.state.inputProductPrice} onChange={this.handleInputPrice.bind(this)} */ required={true} />\n            <Input type=\"submit\" value=\"Add product\" />\n          </Form>\n        </Box>\n      </Flex>\n\n      <button onClick={addItem}> Add item </button>\n\n      <button onClick={getCount}> Count items </button>\n\n      <div>{count}</div>\n\n      <button onClick={getProduct}> Get name </button>\n\n      <div>{product}</div>\n\n    </div>\n    );\n  // return (\n    // <div className=\"App\">\n    //   <header className=\"App-header\">\n    //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    //     <p>\n    //       Edit <code>src/App.js</code> and save to reload.\n    //     </p>\n    //     <a\n    //       className=\"App-link\"\n    //       href=\"https://reactjs.org\"\n    //       target=\"_blank\"\n    //       rel=\"noopener noreferrer\"\n    //     >\n    //       Learn React\n    //     </a>\n    //   </header>\n    // </div>\n  // );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}