{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/gerwin/code/gerwinf/blockchain-bootcamp/supply-chain-deployed/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Box, Form, Input, Select, Field, Button, Text, Checkbox, Radio, Flex, Card, Icon, MetaMaskButton, Image, Heading, Table } from \"rimble-ui\"; // import { useWeb3Context } from 'web3-react'\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Web3 from \"web3\";\nimport getWeb3 from \"./getWeb3\";\nimport MarketplaceContract from \"./contracts/Marketplace.json\";\nimport { SupplyChain } from \"./abi/abi.js\";\n\nfunction App() {\n  _s();\n\n  // const [state, setstate] = useState(initialState)\n  const [count, setCount] = useState(0);\n  const [lastProductsNames, setlastProductsNames] = useState([]);\n  const [lastProductsPrices, setlastProductsPrices] = useState([]);\n  const [lastProductsIds, setlastProductsIds] = useState([]);\n  const [inputName, setInputName] = useState(\"\");\n  const [inputPrice, setInputPrice] = useState(\"\");\n  const [inputId, setInputId] = useState(\"\");\n  const [inputAmount, setInputAmount] = useState(\"\");\n  const [web3, setWeb3] = useState(undefined);\n  const [contractMarketplace, setContractMarketplace] = useState(\"\");\n  const [accounts, setAccounts] = useState([]); // Comment option 1 or 2, then set corresponding address\n\n  useEffect(() => {\n    const init = async () => {\n      try {\n        // Option 1: Ganache\n        // Get network provider and web3 instance.\n        const web3 = await getWeb3(); // Use web3 to get the user's accounts.\n\n        const accounts = await web3.eth.getAccounts(); // Get the Marketplace contract instance.\n\n        const networkId = await web3.eth.net.getId();\n        const deployedNetwork = MarketplaceContract.networks[networkId];\n        const instanceMarketplace = new web3.eth.Contract(MarketplaceContract.abi, deployedNetwork && deployedNetwork.address); // Option 2: GÃ¶rli\n\n        /* // Get the deployed Supply Chain contract\n        const web3 = new Web3(Web3.givenProvider);\n        const contractAddress = \"0xA05De8c36234Fb74a0FD6f216a3568dbBe5400Eb\";\n        const scContract = new web3.eth.Contract(SupplyChain, contractAddress);\n         const accounts = await web3.eth.getAccounts(); */\n        // Set web3, accounts, and contract to the state, and then proceed with an\n        // example of interacting with the contract's methods.\n        // Init state\n\n        const count = await instanceMarketplace\n        /* scContract */\n        .methods.getCount().call();\n        setWeb3(web3);\n        setAccounts(accounts);\n        setContractMarketplace(instanceMarketplace\n        /* scContract */\n        );\n        setCount(count);\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(`Failed to load web3, accounts, or contract. Check console for details.`);\n        console.error(error);\n      }\n    };\n\n    init();\n  }, []);\n\n  const addItem = async t => {\n    t.preventDefault();\n    const account = accounts[0];\n    const contract = contractMarketplace;\n    const productsObj = {\n      iPhone: 55,\n      Tablet: 24,\n      Mouse: 9,\n      Monitor: 30\n    };\n    const productName = Object.keys(productsObj)[Math.floor(Math.random() * Object.keys(productsObj).length)];\n    const productPrice = productsObj[productName];\n    await contract.methods.addItem(productName, productPrice).send({\n      from: account\n    }); // Alternative with gas estimate\n    // const gas = await contract.methods.addItem(productName, productPrice).estimateGas();\n    // const post = await contract.methods.addItem(productName, productPrice).send({\n    //   from: account,\n    //   gas,\n    // });\n  };\n\n  const showProducts = async t => {\n    t.preventDefault();\n    const contract = contractMarketplace; // const productNumber = await contract.methods.getCount().call();\n\n    const numItems = await contract.methods.getCount().call();\n    ;\n    const numShown = 5;\n\n    for (let i = numItems - 1; i > numItems - numShown; i--) {\n      const post = await contract.methods.fetchItem(i).call();\n      setlastProductsNames(prevState => [...prevState, post.name]);\n      setlastProductsPrices(prevState => [...prevState, post.price]);\n      setlastProductsIds(prevState => [...prevState, post.sku]);\n      console.log(post.seller);\n    }\n  };\n\n  const handleSubmitAddItem = e => {\n    alert('A product was added: ' + inputName + inputPrice);\n    e.preventDefault();\n    const account = accounts[0];\n    const contract = contractMarketplace;\n    const productName = inputName;\n    const productPrice = inputPrice;\n    contract.methods.addItem(productName, productPrice).send({\n      from: account\n    }); // Alternative with gas estimate\n    // const gas = await contract.methods.addItem(productName, productPrice).estimateGas();\n    // const post = await contract.methods.addItem(productName, productPrice).send({\n    //   from: account,\n    //   gas,\n    // });\n  };\n\n  const handleSubmitBuyItem = e => {\n    alert('Id of product to be purchased: ' + inputId);\n    e.preventDefault();\n    const account = accounts[0];\n    const contract = contractMarketplace;\n    const productId = inputId;\n    const amount = inputAmount;\n    const ethPriceUSD = 580;\n    const amountToWei = amount / ethPriceUSD * 1000000000000000000;\n    console.log(amountToWei);\n    contract.methods.buyItem(productId).send({\n      from: account,\n      value: amountToWei\n    });\n  };\n\n  const handleInputName = e => {\n    setInputName(e.target.value);\n    validateInput(e);\n  };\n\n  const handleInputPrice = e => {\n    setInputPrice(e.target.value);\n    validateInput(e);\n  };\n\n  const handleInputId = e => {\n    setInputId(e.target.value);\n    validateInput(e);\n  };\n\n  const handleInputAmount = e => {\n    setInputAmount(e.target.value);\n    validateInput(e);\n  };\n\n  const validateInput = e => {\n    e.target.parentNode.classList.add(\"was-validated\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"App-header\",\n      children: [\"Project Marketplace\", /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MetaMaskButton.Outline, {\n        size: 'medium',\n        children: \"Connect with MetaMask\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Smart Contract Tests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Contract: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \" Marketplace \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 20\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Connected account: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\" \", accounts, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 29\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Products online: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\" \", count, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 27\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmitAddItem,\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            placeholder: \"Enter product name\",\n            value: inputName,\n            onChange: handleInputName,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            placeholder: \"Enter price e.g. $150\",\n            value: inputPrice,\n            onChange: handleInputPrice,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"submit\",\n            value: \"Add product\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: lastProductsIds.map(e => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\"Id \", e]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: lastProductsNames.map(e => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: e\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: lastProductsPrices.map(e => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"$\", e]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmitBuyItem,\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            placeholder: \"Enter product id\",\n            value: inputId,\n            onChange: handleInputId,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            placeholder: \"Enter amount e.g. $99\",\n            value: inputAmount,\n            onChange: handleInputAmount,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"submit\",\n            value: \"Buy product\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      size: 'medium',\n      onClick: addItem,\n      children: \"Add random product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      size: 'medium',\n      onClick: showProducts,\n      children: \"Show last products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this); // return (\n  // <div className=\"App\">\n  //   <header className=\"App-header\">\n  //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n  //     <p>\n  //       Edit <code>src/App.js</code> and save to reload.\n  //     </p>\n  //     <a\n  //       className=\"App-link\"\n  //       href=\"https://reactjs.org\"\n  //       target=\"_blank\"\n  //       rel=\"noopener noreferrer\"\n  //     >\n  //       Learn React\n  //     </a>\n  //   </header>\n  // </div>\n  // );\n}\n\n_s(App, \"mY3YExYAcWEmczepjt3JMVYgCRU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/gerwin/code/gerwinf/blockchain-bootcamp/supply-chain-deployed/client/src/App.js"],"names":["React","useState","useEffect","Box","Form","Input","Select","Field","Button","Text","Checkbox","Radio","Flex","Card","Icon","MetaMaskButton","Image","Heading","Table","Web3","getWeb3","MarketplaceContract","SupplyChain","App","count","setCount","lastProductsNames","setlastProductsNames","lastProductsPrices","setlastProductsPrices","lastProductsIds","setlastProductsIds","inputName","setInputName","inputPrice","setInputPrice","inputId","setInputId","inputAmount","setInputAmount","web3","setWeb3","undefined","contractMarketplace","setContractMarketplace","accounts","setAccounts","init","eth","getAccounts","networkId","net","getId","deployedNetwork","networks","instanceMarketplace","Contract","abi","address","methods","getCount","call","error","alert","console","addItem","t","preventDefault","account","contract","productsObj","iPhone","Tablet","Mouse","Monitor","productName","Object","keys","Math","floor","random","length","productPrice","send","from","showProducts","numItems","numShown","i","post","fetchItem","prevState","name","price","sku","log","seller","handleSubmitAddItem","e","handleSubmitBuyItem","productId","amount","ethPriceUSD","amountToWei","buyItem","value","handleInputName","target","validateInput","handleInputPrice","handleInputId","handleInputAmount","parentNode","classList","add","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Box, Form, Input, Select, Field, Button, Text, Checkbox, Radio, Flex, Card, Icon, MetaMaskButton, Image, Heading, Table } from \"rimble-ui\";\n// import { useWeb3Context } from 'web3-react'\nimport logo from './logo.svg';\nimport './App.css';\nimport Web3 from \"web3\";\nimport getWeb3 from \"./getWeb3\";\nimport MarketplaceContract from \"./contracts/Marketplace.json\";\nimport { SupplyChain } from \"./abi/abi.js\";\n\nfunction App() {\n  // const [state, setstate] = useState(initialState)\n  const [count, setCount] = useState(0);\n  const [lastProductsNames, setlastProductsNames] = useState([]);\n  const [lastProductsPrices, setlastProductsPrices] = useState([]);\n  const [lastProductsIds, setlastProductsIds] = useState([]);\n  const [inputName, setInputName] = useState(\"\");\n  const [inputPrice, setInputPrice] = useState(\"\");\n  const [inputId, setInputId] = useState(\"\");\n  const [inputAmount, setInputAmount] = useState(\"\");\n  const [web3, setWeb3] = useState(undefined);\n  const [contractMarketplace, setContractMarketplace] = useState(\"\");\n  const [accounts, setAccounts] = useState([]);\n\n  // Comment option 1 or 2, then set corresponding address\n  useEffect(() => {\n    const init = async () => {\n      try {\n        // Option 1: Ganache\n        // Get network provider and web3 instance.\n        const web3 = await getWeb3();\n\n        // Use web3 to get the user's accounts.\n        const accounts = await web3.eth.getAccounts();\n\n        // Get the Marketplace contract instance.\n        const networkId = await web3.eth.net.getId();\n        const deployedNetwork = MarketplaceContract.networks[networkId];\n        const instanceMarketplace = new web3.eth.Contract(\n          MarketplaceContract.abi,\n          deployedNetwork && deployedNetwork.address,\n        );\n\n        // Option 2: GÃ¶rli\n        /* // Get the deployed Supply Chain contract\n        const web3 = new Web3(Web3.givenProvider);\n        const contractAddress = \"0xA05De8c36234Fb74a0FD6f216a3568dbBe5400Eb\";\n        const scContract = new web3.eth.Contract(SupplyChain, contractAddress);\n\n        const accounts = await web3.eth.getAccounts(); */\n\n        // Set web3, accounts, and contract to the state, and then proceed with an\n        // example of interacting with the contract's methods.\n\n        // Init state\n        const count = await instanceMarketplace/* scContract */.methods.getCount().call();\n\n        setWeb3(web3);\n        setAccounts(accounts);\n        setContractMarketplace(instanceMarketplace /* scContract */);\n        setCount(count);\n\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(\n          `Failed to load web3, accounts, or contract. Check console for details.`,\n        );\n        console.error(error);\n      }\n    }\n    init();\n  }, []);\n\n\n  const addItem = async (t) => {\n    t.preventDefault();\n    const account = accounts[0];\n    const contract = contractMarketplace;\n\n    const productsObj = {\n      iPhone: 55,\n      Tablet: 24,\n      Mouse: 9,\n      Monitor: 30\n    }\n\n    const productName = Object.keys(productsObj)[Math.floor(Math.random() * Object.keys(productsObj).length)];\n    const productPrice = productsObj[productName];\n\n    await contract.methods.addItem(productName, productPrice).send({from: account});\n    // Alternative with gas estimate\n    // const gas = await contract.methods.addItem(productName, productPrice).estimateGas();\n    // const post = await contract.methods.addItem(productName, productPrice).send({\n    //   from: account,\n    //   gas,\n    // });\n  };\n\n\n  const showProducts = async (t) => {\n    t.preventDefault();\n    const contract = contractMarketplace;\n    // const productNumber = await contract.methods.getCount().call();\n    const numItems = await contract.methods.getCount().call();;\n    const numShown = 5;\n\n    for (let i = numItems - 1; i > numItems - numShown; i--) {\n      const post = await contract.methods.fetchItem(i).call()\n      setlastProductsNames((prevState => [...prevState, post.name]));\n      setlastProductsPrices((prevState => [...prevState, post.price]));\n      setlastProductsIds((prevState => [...prevState, post.sku]));\n      console.log(post.seller)\n    }\n  }\n\n  const handleSubmitAddItem = e => {\n    alert('A product was added: ' + inputName + inputPrice);\n\n    e.preventDefault();\n    const account = accounts[0]\n    const contract = contractMarketplace;\n    const productName = inputName;\n    const productPrice = inputPrice;\n\n    contract.methods.addItem(productName, productPrice).send({ from: account });\n    // Alternative with gas estimate\n    // const gas = await contract.methods.addItem(productName, productPrice).estimateGas();\n    // const post = await contract.methods.addItem(productName, productPrice).send({\n    //   from: account,\n    //   gas,\n    // });\n\n  }\n\n  const handleSubmitBuyItem = e => {\n    alert('Id of product to be purchased: ' + inputId);\n    e.preventDefault();\n    const account = accounts[0]\n    const contract = contractMarketplace;\n\n    const productId = inputId;\n    const amount = inputAmount;\n    const ethPriceUSD = 580;\n    const amountToWei = (amount / ethPriceUSD) * 1000000000000000000;\n    console.log(amountToWei)\n\n    contract.methods.buyItem(productId).send({ from: account, value: amountToWei })\n  }\n\n\n  const handleInputName = e => {\n    setInputName(e.target.value);\n    validateInput(e);\n  };\n\n  const handleInputPrice = e => {\n    setInputPrice(e.target.value);\n    validateInput(e);\n  }\n\n  const handleInputId = e => {\n    setInputId(e.target.value);\n    validateInput(e);\n  }\n\n  const handleInputAmount = e => {\n    setInputAmount(e.target.value);\n    validateInput(e);\n  }\n\n  const validateInput = e => {\n    e.target.parentNode.classList.add(\"was-validated\");\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"App-header\">Project Marketplace\n        <p></p>\n        <MetaMaskButton.Outline size={'medium'}>Connect with MetaMask</MetaMaskButton.Outline>\n      </h1>\n\n      <h2>Smart Contract Tests</h2>\n      <p>Contract: <strong> Marketplace </strong> </p>\n      {/* {contractMarketplace.options.address} */}\n      <p>Connected account: <strong> {accounts} </strong> </p>\n      <p>Products online: <strong> {count} </strong> </p>\n\n      <Flex justifyContent='center'>\n        <Box>\n          <Form onSubmit={handleSubmitAddItem}>\n            <Input type=\"text\" placeholder=\"Enter product name\" value={inputName} onChange={handleInputName} required={true} />\n            <Input type=\"text\" placeholder=\"Enter price e.g. $150\" value={inputPrice} onChange={handleInputPrice} required={true} />\n            <Input type=\"submit\" value=\"Add product\" />\n          </Form>\n        </Box>\n      </Flex>\n\n\n      <Table>\n        <tbody>\n          <tr>\n            {lastProductsIds.map(e =>\n              <td><strong>Id {e}</strong></td>\n            )}\n          </tr>\n          <tr>\n            {lastProductsNames.map(e =>\n              <td>{e}</td>\n            )}\n          </tr>\n          <tr>\n            {lastProductsPrices.map(e =>\n              <td>${e}</td>\n            )}\n          </tr>\n        </tbody>\n      </Table>\n\n      <Flex justifyContent='center'>\n        <Box>\n          <Form onSubmit={handleSubmitBuyItem}>\n            <Input type=\"text\" placeholder=\"Enter product id\" value={inputId} onChange={handleInputId} required={true} />\n            <Input type=\"text\" placeholder=\"Enter amount e.g. $99\" value={inputAmount} onChange={handleInputAmount} required={true} />\n            <Input type=\"submit\" value=\"Buy product\" />\n          </Form>\n        </Box>\n      </Flex>\n\n      <Button size={'medium'} onClick={addItem}>\n        Add random product\n      </Button>\n\n      <br></br>\n      <br></br>\n\n      <Button size={'medium'} onClick={showProducts}>\n        Show last products\n      </Button>\n\n    </div>\n    );\n  // return (\n    // <div className=\"App\">\n    //   <header className=\"App-header\">\n    //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    //     <p>\n    //       Edit <code>src/App.js</code> and save to reload.\n    //     </p>\n    //     <a\n    //       className=\"App-link\"\n    //       href=\"https://reactjs.org\"\n    //       target=\"_blank\"\n    //       rel=\"noopener noreferrer\"\n    //     >\n    //       Learn React\n    //     </a>\n    //   </header>\n    // </div>\n  // );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}