{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from \"react\";\nimport styled from \"styled-components\";\nimport { space, color } from \"styled-system\";\nvar Svg = styled(\"svg\")({\n  flex: \"none\"\n}, space, color);\nvar SvgAirplay = React.forwardRef(function (props, ref) {\n  return React.createElement(Svg, _extends({}, props, {\n    viewBox: \"0 0 24 24\",\n    height: props.size,\n    width: props.size,\n    fill: \"currentcolor\",\n    ref: ref\n  }), React.createElement(\"defs\", null, React.createElement(\"path\", {\n    id: \"airplay_svg__a\",\n    d: \"M0 0h24v24H0V0z\"\n  })), React.createElement(\"defs\", null, React.createElement(\"path\", {\n    id: \"airplay_svg__c\",\n    d: \"M0 0h24v24H0V0z\"\n  })), React.createElement(\"clipPath\", {\n    id: \"airplay_svg__b\"\n  }, React.createElement(\"use\", {\n    xlinkHref: \"#airplay_svg__a\",\n    overflow: \"visible\"\n  })), React.createElement(\"clipPath\", {\n    id: \"airplay_svg__d\",\n    clipPath: \"url(#airplay_svg__b)\"\n  }, React.createElement(\"use\", {\n    xlinkHref: \"#airplay_svg__c\",\n    overflow: \"visible\"\n  })), React.createElement(\"path\", {\n    d: \"M6 22h12l-6-6zM21 3H3c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h4v-2H3V5h18v12h-4v2h4c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\",\n    clipPath: \"url(#airplay_svg__d)\"\n  }));\n});\nSvgAirplay.displayName = \"SvgAirplay\";\nSvgAirplay.defaultProps = {\n  size: 24,\n  color: \"inherit\"\n};\nexport default SvgAirplay;","map":{"version":3,"sources":["/home/gerwin/code/gerwinf/blockchain-bootcamp/supply-chain-deployed/client/node_modules/@rimble/icons/es/md/Airplay.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","styled","space","color","Svg","flex","SvgAirplay","forwardRef","props","ref","createElement","viewBox","height","size","width","fill","id","d","xlinkHref","overflow","clipPath","displayName","defaultProps"],"mappings":"AAAA,SAASA,QAAT,GAAoB;AAAEA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,UAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,WAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,YAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,UAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,WAAOL,MAAP;AAAgB,GAA5P;;AAA8P,SAAOH,QAAQ,CAACY,KAAT,CAAe,IAAf,EAAqBP,SAArB,CAAP;AAAyC;;AAE7T,OAAO,KAAKQ,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,KAAT,EAAgBC,KAAhB,QAA6B,eAA7B;AACA,IAAIC,GAAG,GAAGH,MAAM,CAAC,KAAD,CAAN,CAAc;AACtBI,EAAAA,IAAI,EAAE;AADgB,CAAd,EAEPH,KAFO,EAEAC,KAFA,CAAV;AAGA,IAAIG,UAAU,GAAGN,KAAK,CAACO,UAAN,CAAiB,UAAUC,KAAV,EAAiBC,GAAjB,EAAsB;AACtD,SAAOT,KAAK,CAACU,aAAN,CAAoBN,GAApB,EAAyBjB,QAAQ,CAAC,EAAD,EAAKqB,KAAL,EAAY;AAClDG,IAAAA,OAAO,EAAE,WADyC;AAElDC,IAAAA,MAAM,EAAEJ,KAAK,CAACK,IAFoC;AAGlDC,IAAAA,KAAK,EAAEN,KAAK,CAACK,IAHqC;AAIlDE,IAAAA,IAAI,EAAE,cAJ4C;AAKlDN,IAAAA,GAAG,EAAEA;AAL6C,GAAZ,CAAjC,EAMHT,KAAK,CAACU,aAAN,CAAoB,MAApB,EAA4B,IAA5B,EAAkCV,KAAK,CAACU,aAAN,CAAoB,MAApB,EAA4B;AAChEM,IAAAA,EAAE,EAAE,gBAD4D;AAEhEC,IAAAA,CAAC,EAAE;AAF6D,GAA5B,CAAlC,CANG,EASFjB,KAAK,CAACU,aAAN,CAAoB,MAApB,EAA4B,IAA5B,EAAkCV,KAAK,CAACU,aAAN,CAAoB,MAApB,EAA4B;AACjEM,IAAAA,EAAE,EAAE,gBAD6D;AAEjEC,IAAAA,CAAC,EAAE;AAF8D,GAA5B,CAAlC,CATE,EAYFjB,KAAK,CAACU,aAAN,CAAoB,UAApB,EAAgC;AACnCM,IAAAA,EAAE,EAAE;AAD+B,GAAhC,EAEFhB,KAAK,CAACU,aAAN,CAAoB,KAApB,EAA2B;AAC5BQ,IAAAA,SAAS,EAAE,iBADiB;AAE5BC,IAAAA,QAAQ,EAAE;AAFkB,GAA3B,CAFE,CAZE,EAiBFnB,KAAK,CAACU,aAAN,CAAoB,UAApB,EAAgC;AACnCM,IAAAA,EAAE,EAAE,gBAD+B;AAEnCI,IAAAA,QAAQ,EAAE;AAFyB,GAAhC,EAGFpB,KAAK,CAACU,aAAN,CAAoB,KAApB,EAA2B;AAC5BQ,IAAAA,SAAS,EAAE,iBADiB;AAE5BC,IAAAA,QAAQ,EAAE;AAFkB,GAA3B,CAHE,CAjBE,EAuBFnB,KAAK,CAACU,aAAN,CAAoB,MAApB,EAA4B;AAC/BO,IAAAA,CAAC,EAAE,+GAD4B;AAE/BG,IAAAA,QAAQ,EAAE;AAFqB,GAA5B,CAvBE,CAAP;AA2BD,CA5BgB,CAAjB;AA6BAd,UAAU,CAACe,WAAX,GAAyB,YAAzB;AACAf,UAAU,CAACgB,YAAX,GAA0B;AACxBT,EAAAA,IAAI,EAAE,EADkB;AAExBV,EAAAA,KAAK,EAAE;AAFiB,CAA1B;AAIA,eAAeG,UAAf","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\nimport styled from \"styled-components\";\nimport { space, color } from \"styled-system\";\nvar Svg = styled(\"svg\")({\n  flex: \"none\"\n}, space, color);\nvar SvgAirplay = React.forwardRef(function (props, ref) {\n  return React.createElement(Svg, _extends({}, props, {\n    viewBox: \"0 0 24 24\",\n    height: props.size,\n    width: props.size,\n    fill: \"currentcolor\",\n    ref: ref\n  }), React.createElement(\"defs\", null, React.createElement(\"path\", {\n    id: \"airplay_svg__a\",\n    d: \"M0 0h24v24H0V0z\"\n  })), React.createElement(\"defs\", null, React.createElement(\"path\", {\n    id: \"airplay_svg__c\",\n    d: \"M0 0h24v24H0V0z\"\n  })), React.createElement(\"clipPath\", {\n    id: \"airplay_svg__b\"\n  }, React.createElement(\"use\", {\n    xlinkHref: \"#airplay_svg__a\",\n    overflow: \"visible\"\n  })), React.createElement(\"clipPath\", {\n    id: \"airplay_svg__d\",\n    clipPath: \"url(#airplay_svg__b)\"\n  }, React.createElement(\"use\", {\n    xlinkHref: \"#airplay_svg__c\",\n    overflow: \"visible\"\n  })), React.createElement(\"path\", {\n    d: \"M6 22h12l-6-6zM21 3H3c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h4v-2H3V5h18v12h-4v2h4c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\",\n    clipPath: \"url(#airplay_svg__d)\"\n  }));\n});\nSvgAirplay.displayName = \"SvgAirplay\";\nSvgAirplay.defaultProps = {\n  size: 24,\n  color: \"inherit\"\n};\nexport default SvgAirplay;"]},"metadata":{},"sourceType":"module"}